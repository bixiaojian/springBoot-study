// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SnapshotP.proto

package com.pancm.protobuf;

public final class Snapshot {
  private Snapshot() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SnapshotProOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SnapshotPro)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string id = 1;</code>
     */
    String getId();
    /**
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * 合约名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    String getName();
    /**
     * <pre>
     * 合约名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * 证券代码
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    String getCode();
    /**
     * <pre>
     * 证券代码
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <pre>
     * 起始日期
     * </pre>
     *
     * <code>int32 date = 4;</code>
     */
    int getDate();

    /**
     * <code>int32 time = 5;</code>
     */
    int getTime();

    /**
     * <pre>
     * 开始日期
     * </pre>
     *
     * <code>int32 prevSettlement = 6;</code>
     */
    int getPrevSettlement();

    /**
     * <pre>
     * 开盘价
     * </pre>
     *
     * <code>int64 open = 7;</code>
     */
    long getOpen();

    /**
     * <pre>
     * 最高价
     * </pre>
     *
     * <code>int64 high = 8;</code>
     */
    long getHigh();

    /**
     * <pre>
     * 最低价
     * </pre>
     *
     * <code>int64 low = 9;</code>
     */
    long getLow();

    /**
     * <pre>
     * 收盘价
     * </pre>
     *
     * <code>int64 close = 10;</code>
     */
    long getClose();

    /**
     * <pre>
     * 成交量(总手)
     * </pre>
     *
     * <code>int64 businessAmount = 11;</code>
     */
    long getBusinessAmount();

    /**
     * <pre>
     * 持仓量
     * </pre>
     *
     * <code>int64 amount = 12;</code>
     */
    long getAmount();

    /**
     * <pre>
     * 结算价
     * </pre>
     *
     * <code>int64 settlement = 13;</code>
     */
    long getSettlement();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 bidEntrustPx = 14;</code>
     */
    long getBidEntrustPx();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 offerEntrustPx = 15;</code>
     */
    long getOfferEntrustPx();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 bidTotalEntrustAmount = 16;</code>
     */
    long getBidTotalEntrustAmount();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 offerTotalEntrustAmount = 17;</code>
     */
    long getOfferTotalEntrustAmount();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 businessBalance = 18;</code>
     */
    long getBusinessBalance();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 preAmount = 19;</code>
     */
    long getPreAmount();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 changePrice = 20;</code>
     */
    long getChangePrice();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 createTime = 21;</code>
     */
    long getCreateTime();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 tradingDay = 22;</code>
     */
    long getTradingDay();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 timestamp = 23;</code>
     */
    long getTimestamp();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 receiveTime = 24;</code>
     */
    long getReceiveTime();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 currentAmount = 25;</code>
     */
    long getCurrentAmount();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 pxChange = 26;</code>
     */
    long getPxChange();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 pxChangeRate = 27;</code>
     */
    long getPxChangeRate();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 amountDelta = 28;</code>
     */
    long getAmountDelta();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 sec60Chgpct = 29;</code>
     */
    long getSec60Chgpct();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 currentPxChange = 30;</code>
     */
    long getCurrentPxChange();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 currentAmountChange = 31;</code>
     */
    long getCurrentAmountChange();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 preclose = 32;</code>
     */
    long getPreclose();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 capitalDeposit = 33;</code>
     */
    long getCapitalDeposit();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 capitalFlow = 34;</code>
     */
    long getCapitalFlow();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 trends = 35;</code>
     */
    long getTrends();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 speculation = 36;</code>
     */
    long getSpeculation();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 tickSize = 37;</code>
     */
    long getTickSize();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 contractUnit = 38;</code>
     */
    long getContractUnit();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 expireDate = 39;</code>
     */
    long getExpireDate();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 avg = 40;</code>
     */
    long getAvg();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 up = 41;</code>
     */
    long getUp();

    /**
     * <pre>
     * </pre>
     *
     * <code>int64 down = 42;</code>
     */
    long getDown();

    /**
     * <pre>
     *扩展参数
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 43;</code>
     */
    int getExtraCount();
    /**
     * <pre>
     *扩展参数
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 43;</code>
     */
    boolean containsExtra(
        String key);
    /**
     * Use {@link #getExtraMap()} instead.
     */
    @Deprecated
    java.util.Map<String, String>
    getExtra();
    /**
     * <pre>
     *扩展参数
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 43;</code>
     */
    java.util.Map<String, String>
    getExtraMap();
    /**
     * <pre>
     *扩展参数
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 43;</code>
     */

    String getExtraOrDefault(
        String key,
        String defaultValue);
    /**
     * <pre>
     *扩展参数
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 43;</code>
     */

    String getExtraOrThrow(
        String key);
  }
  /**
   * Protobuf type {@code SnapshotPro}
   */
  public  static final class SnapshotPro extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SnapshotPro)
      SnapshotProOrBuilder {
    // Use SnapshotPro.newBuilder() to construct.
    private SnapshotPro(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SnapshotPro() {
      id_ = "";
      name_ = "";
      code_ = "";
      date_ = 0;
      time_ = 0;
      prevSettlement_ = 0;
      open_ = 0L;
      high_ = 0L;
      low_ = 0L;
      close_ = 0L;
      businessAmount_ = 0L;
      amount_ = 0L;
      settlement_ = 0L;
      bidEntrustPx_ = 0L;
      offerEntrustPx_ = 0L;
      bidTotalEntrustAmount_ = 0L;
      offerTotalEntrustAmount_ = 0L;
      businessBalance_ = 0L;
      preAmount_ = 0L;
      changePrice_ = 0L;
      createTime_ = 0L;
      tradingDay_ = 0L;
      timestamp_ = 0L;
      receiveTime_ = 0L;
      currentAmount_ = 0L;
      pxChange_ = 0L;
      pxChangeRate_ = 0L;
      amountDelta_ = 0L;
      sec60Chgpct_ = 0L;
      currentPxChange_ = 0L;
      currentAmountChange_ = 0L;
      preclose_ = 0L;
      capitalDeposit_ = 0L;
      capitalFlow_ = 0L;
      trends_ = 0L;
      speculation_ = 0L;
      tickSize_ = 0L;
      contractUnit_ = 0L;
      expireDate_ = 0L;
      avg_ = 0L;
      up_ = 0L;
      down_ = 0L;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SnapshotPro(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              code_ = s;
              break;
            }
            case 32: {

              date_ = input.readInt32();
              break;
            }
            case 40: {

              time_ = input.readInt32();
              break;
            }
            case 48: {

              prevSettlement_ = input.readInt32();
              break;
            }
            case 56: {

              open_ = input.readInt64();
              break;
            }
            case 64: {

              high_ = input.readInt64();
              break;
            }
            case 72: {

              low_ = input.readInt64();
              break;
            }
            case 80: {

              close_ = input.readInt64();
              break;
            }
            case 88: {

              businessAmount_ = input.readInt64();
              break;
            }
            case 96: {

              amount_ = input.readInt64();
              break;
            }
            case 104: {

              settlement_ = input.readInt64();
              break;
            }
            case 112: {

              bidEntrustPx_ = input.readInt64();
              break;
            }
            case 120: {

              offerEntrustPx_ = input.readInt64();
              break;
            }
            case 128: {

              bidTotalEntrustAmount_ = input.readInt64();
              break;
            }
            case 136: {

              offerTotalEntrustAmount_ = input.readInt64();
              break;
            }
            case 144: {

              businessBalance_ = input.readInt64();
              break;
            }
            case 152: {

              preAmount_ = input.readInt64();
              break;
            }
            case 160: {

              changePrice_ = input.readInt64();
              break;
            }
            case 168: {

              createTime_ = input.readInt64();
              break;
            }
            case 176: {

              tradingDay_ = input.readInt64();
              break;
            }
            case 184: {

              timestamp_ = input.readInt64();
              break;
            }
            case 192: {

              receiveTime_ = input.readInt64();
              break;
            }
            case 200: {

              currentAmount_ = input.readInt64();
              break;
            }
            case 208: {

              pxChange_ = input.readInt64();
              break;
            }
            case 216: {

              pxChangeRate_ = input.readInt64();
              break;
            }
            case 224: {

              amountDelta_ = input.readInt64();
              break;
            }
            case 232: {

              sec60Chgpct_ = input.readInt64();
              break;
            }
            case 240: {

              currentPxChange_ = input.readInt64();
              break;
            }
            case 248: {

              currentAmountChange_ = input.readInt64();
              break;
            }
            case 256: {

              preclose_ = input.readInt64();
              break;
            }
            case 264: {

              capitalDeposit_ = input.readInt64();
              break;
            }
            case 272: {

              capitalFlow_ = input.readInt64();
              break;
            }
            case 280: {

              trends_ = input.readInt64();
              break;
            }
            case 288: {

              speculation_ = input.readInt64();
              break;
            }
            case 296: {

              tickSize_ = input.readInt64();
              break;
            }
            case 304: {

              contractUnit_ = input.readInt64();
              break;
            }
            case 312: {

              expireDate_ = input.readInt64();
              break;
            }
            case 320: {

              avg_ = input.readInt64();
              break;
            }
            case 328: {

              up_ = input.readInt64();
              break;
            }
            case 336: {

              down_ = input.readInt64();
              break;
            }
            case 346: {
              if (!((mutable_bitField1_ & 0x00000400) == 0x00000400)) {
                extra_ = com.google.protobuf.MapField.newMapField(
                    ExtraDefaultEntryHolder.defaultEntry);
                mutable_bitField1_ |= 0x00000400;
              }
              com.google.protobuf.MapEntry<String, String>
              extra__ = input.readMessage(
                  ExtraDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              extra_.getMutableMap().put(
                  extra__.getKey(), extra__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancm.protobuf.Snapshot.internal_static_SnapshotPro_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 43:
          return internalGetExtra();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancm.protobuf.Snapshot.internal_static_SnapshotPro_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancm.protobuf.Snapshot.SnapshotPro.class, com.pancm.protobuf.Snapshot.SnapshotPro.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile Object id_;
    /**
     * <code>string id = 1;</code>
     */
    public String getId() {
      Object ref = id_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile Object name_;
    /**
     * <pre>
     * 合约名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 合约名称
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CODE_FIELD_NUMBER = 3;
    private volatile Object code_;
    /**
     * <pre>
     * 证券代码
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    public String getCode() {
      Object ref = code_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        code_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 证券代码
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCodeBytes() {
      Object ref = code_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATE_FIELD_NUMBER = 4;
    private int date_;
    /**
     * <pre>
     * 起始日期
     * </pre>
     *
     * <code>int32 date = 4;</code>
     */
    public int getDate() {
      return date_;
    }

    public static final int TIME_FIELD_NUMBER = 5;
    private int time_;
    /**
     * <code>int32 time = 5;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int PREVSETTLEMENT_FIELD_NUMBER = 6;
    private int prevSettlement_;
    /**
     * <pre>
     * 开始日期
     * </pre>
     *
     * <code>int32 prevSettlement = 6;</code>
     */
    public int getPrevSettlement() {
      return prevSettlement_;
    }

    public static final int OPEN_FIELD_NUMBER = 7;
    private long open_;
    /**
     * <pre>
     * 开盘价
     * </pre>
     *
     * <code>int64 open = 7;</code>
     */
    public long getOpen() {
      return open_;
    }

    public static final int HIGH_FIELD_NUMBER = 8;
    private long high_;
    /**
     * <pre>
     * 最高价
     * </pre>
     *
     * <code>int64 high = 8;</code>
     */
    public long getHigh() {
      return high_;
    }

    public static final int LOW_FIELD_NUMBER = 9;
    private long low_;
    /**
     * <pre>
     * 最低价
     * </pre>
     *
     * <code>int64 low = 9;</code>
     */
    public long getLow() {
      return low_;
    }

    public static final int CLOSE_FIELD_NUMBER = 10;
    private long close_;
    /**
     * <pre>
     * 收盘价
     * </pre>
     *
     * <code>int64 close = 10;</code>
     */
    public long getClose() {
      return close_;
    }

    public static final int BUSINESSAMOUNT_FIELD_NUMBER = 11;
    private long businessAmount_;
    /**
     * <pre>
     * 成交量(总手)
     * </pre>
     *
     * <code>int64 businessAmount = 11;</code>
     */
    public long getBusinessAmount() {
      return businessAmount_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 12;
    private long amount_;
    /**
     * <pre>
     * 持仓量
     * </pre>
     *
     * <code>int64 amount = 12;</code>
     */
    public long getAmount() {
      return amount_;
    }

    public static final int SETTLEMENT_FIELD_NUMBER = 13;
    private long settlement_;
    /**
     * <pre>
     * 结算价
     * </pre>
     *
     * <code>int64 settlement = 13;</code>
     */
    public long getSettlement() {
      return settlement_;
    }

    public static final int BIDENTRUSTPX_FIELD_NUMBER = 14;
    private long bidEntrustPx_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 bidEntrustPx = 14;</code>
     */
    public long getBidEntrustPx() {
      return bidEntrustPx_;
    }

    public static final int OFFERENTRUSTPX_FIELD_NUMBER = 15;
    private long offerEntrustPx_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 offerEntrustPx = 15;</code>
     */
    public long getOfferEntrustPx() {
      return offerEntrustPx_;
    }

    public static final int BIDTOTALENTRUSTAMOUNT_FIELD_NUMBER = 16;
    private long bidTotalEntrustAmount_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 bidTotalEntrustAmount = 16;</code>
     */
    public long getBidTotalEntrustAmount() {
      return bidTotalEntrustAmount_;
    }

    public static final int OFFERTOTALENTRUSTAMOUNT_FIELD_NUMBER = 17;
    private long offerTotalEntrustAmount_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 offerTotalEntrustAmount = 17;</code>
     */
    public long getOfferTotalEntrustAmount() {
      return offerTotalEntrustAmount_;
    }

    public static final int BUSINESSBALANCE_FIELD_NUMBER = 18;
    private long businessBalance_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 businessBalance = 18;</code>
     */
    public long getBusinessBalance() {
      return businessBalance_;
    }

    public static final int PREAMOUNT_FIELD_NUMBER = 19;
    private long preAmount_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 preAmount = 19;</code>
     */
    public long getPreAmount() {
      return preAmount_;
    }

    public static final int CHANGEPRICE_FIELD_NUMBER = 20;
    private long changePrice_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 changePrice = 20;</code>
     */
    public long getChangePrice() {
      return changePrice_;
    }

    public static final int CREATETIME_FIELD_NUMBER = 21;
    private long createTime_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 createTime = 21;</code>
     */
    public long getCreateTime() {
      return createTime_;
    }

    public static final int TRADINGDAY_FIELD_NUMBER = 22;
    private long tradingDay_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 tradingDay = 22;</code>
     */
    public long getTradingDay() {
      return tradingDay_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 23;
    private long timestamp_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 timestamp = 23;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int RECEIVETIME_FIELD_NUMBER = 24;
    private long receiveTime_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 receiveTime = 24;</code>
     */
    public long getReceiveTime() {
      return receiveTime_;
    }

    public static final int CURRENTAMOUNT_FIELD_NUMBER = 25;
    private long currentAmount_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 currentAmount = 25;</code>
     */
    public long getCurrentAmount() {
      return currentAmount_;
    }

    public static final int PXCHANGE_FIELD_NUMBER = 26;
    private long pxChange_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 pxChange = 26;</code>
     */
    public long getPxChange() {
      return pxChange_;
    }

    public static final int PXCHANGERATE_FIELD_NUMBER = 27;
    private long pxChangeRate_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 pxChangeRate = 27;</code>
     */
    public long getPxChangeRate() {
      return pxChangeRate_;
    }

    public static final int AMOUNTDELTA_FIELD_NUMBER = 28;
    private long amountDelta_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 amountDelta = 28;</code>
     */
    public long getAmountDelta() {
      return amountDelta_;
    }

    public static final int SEC60CHGPCT_FIELD_NUMBER = 29;
    private long sec60Chgpct_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 sec60Chgpct = 29;</code>
     */
    public long getSec60Chgpct() {
      return sec60Chgpct_;
    }

    public static final int CURRENTPXCHANGE_FIELD_NUMBER = 30;
    private long currentPxChange_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 currentPxChange = 30;</code>
     */
    public long getCurrentPxChange() {
      return currentPxChange_;
    }

    public static final int CURRENTAMOUNTCHANGE_FIELD_NUMBER = 31;
    private long currentAmountChange_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 currentAmountChange = 31;</code>
     */
    public long getCurrentAmountChange() {
      return currentAmountChange_;
    }

    public static final int PRECLOSE_FIELD_NUMBER = 32;
    private long preclose_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 preclose = 32;</code>
     */
    public long getPreclose() {
      return preclose_;
    }

    public static final int CAPITALDEPOSIT_FIELD_NUMBER = 33;
    private long capitalDeposit_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 capitalDeposit = 33;</code>
     */
    public long getCapitalDeposit() {
      return capitalDeposit_;
    }

    public static final int CAPITALFLOW_FIELD_NUMBER = 34;
    private long capitalFlow_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 capitalFlow = 34;</code>
     */
    public long getCapitalFlow() {
      return capitalFlow_;
    }

    public static final int TRENDS_FIELD_NUMBER = 35;
    private long trends_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 trends = 35;</code>
     */
    public long getTrends() {
      return trends_;
    }

    public static final int SPECULATION_FIELD_NUMBER = 36;
    private long speculation_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 speculation = 36;</code>
     */
    public long getSpeculation() {
      return speculation_;
    }

    public static final int TICKSIZE_FIELD_NUMBER = 37;
    private long tickSize_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 tickSize = 37;</code>
     */
    public long getTickSize() {
      return tickSize_;
    }

    public static final int CONTRACTUNIT_FIELD_NUMBER = 38;
    private long contractUnit_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 contractUnit = 38;</code>
     */
    public long getContractUnit() {
      return contractUnit_;
    }

    public static final int EXPIREDATE_FIELD_NUMBER = 39;
    private long expireDate_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 expireDate = 39;</code>
     */
    public long getExpireDate() {
      return expireDate_;
    }

    public static final int AVG_FIELD_NUMBER = 40;
    private long avg_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 avg = 40;</code>
     */
    public long getAvg() {
      return avg_;
    }

    public static final int UP_FIELD_NUMBER = 41;
    private long up_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 up = 41;</code>
     */
    public long getUp() {
      return up_;
    }

    public static final int DOWN_FIELD_NUMBER = 42;
    private long down_;
    /**
     * <pre>
     * </pre>
     *
     * <code>int64 down = 42;</code>
     */
    public long getDown() {
      return down_;
    }

    public static final int EXTRA_FIELD_NUMBER = 43;
    private static final class ExtraDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, String> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, String>newDefaultInstance(
                  com.pancm.protobuf.Snapshot.internal_static_SnapshotPro_ExtraEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        String, String> extra_;
    private com.google.protobuf.MapField<String, String>
    internalGetExtra() {
      if (extra_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExtraDefaultEntryHolder.defaultEntry);
      }
      return extra_;
    }

    public int getExtraCount() {
      return internalGetExtra().getMap().size();
    }
    /**
     * <pre>
     *扩展参数
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 43;</code>
     */

    public boolean containsExtra(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetExtra().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExtraMap()} instead.
     */
    @Deprecated
    public java.util.Map<String, String> getExtra() {
      return getExtraMap();
    }
    /**
     * <pre>
     *扩展参数
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 43;</code>
     */

    public java.util.Map<String, String> getExtraMap() {
      return internalGetExtra().getMap();
    }
    /**
     * <pre>
     *扩展参数
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 43;</code>
     */

    public String getExtraOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetExtra().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *扩展参数
     * </pre>
     *
     * <code>map&lt;string, string&gt; extra = 43;</code>
     */

    public String getExtraOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetExtra().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, code_);
      }
      if (date_ != 0) {
        output.writeInt32(4, date_);
      }
      if (time_ != 0) {
        output.writeInt32(5, time_);
      }
      if (prevSettlement_ != 0) {
        output.writeInt32(6, prevSettlement_);
      }
      if (open_ != 0L) {
        output.writeInt64(7, open_);
      }
      if (high_ != 0L) {
        output.writeInt64(8, high_);
      }
      if (low_ != 0L) {
        output.writeInt64(9, low_);
      }
      if (close_ != 0L) {
        output.writeInt64(10, close_);
      }
      if (businessAmount_ != 0L) {
        output.writeInt64(11, businessAmount_);
      }
      if (amount_ != 0L) {
        output.writeInt64(12, amount_);
      }
      if (settlement_ != 0L) {
        output.writeInt64(13, settlement_);
      }
      if (bidEntrustPx_ != 0L) {
        output.writeInt64(14, bidEntrustPx_);
      }
      if (offerEntrustPx_ != 0L) {
        output.writeInt64(15, offerEntrustPx_);
      }
      if (bidTotalEntrustAmount_ != 0L) {
        output.writeInt64(16, bidTotalEntrustAmount_);
      }
      if (offerTotalEntrustAmount_ != 0L) {
        output.writeInt64(17, offerTotalEntrustAmount_);
      }
      if (businessBalance_ != 0L) {
        output.writeInt64(18, businessBalance_);
      }
      if (preAmount_ != 0L) {
        output.writeInt64(19, preAmount_);
      }
      if (changePrice_ != 0L) {
        output.writeInt64(20, changePrice_);
      }
      if (createTime_ != 0L) {
        output.writeInt64(21, createTime_);
      }
      if (tradingDay_ != 0L) {
        output.writeInt64(22, tradingDay_);
      }
      if (timestamp_ != 0L) {
        output.writeInt64(23, timestamp_);
      }
      if (receiveTime_ != 0L) {
        output.writeInt64(24, receiveTime_);
      }
      if (currentAmount_ != 0L) {
        output.writeInt64(25, currentAmount_);
      }
      if (pxChange_ != 0L) {
        output.writeInt64(26, pxChange_);
      }
      if (pxChangeRate_ != 0L) {
        output.writeInt64(27, pxChangeRate_);
      }
      if (amountDelta_ != 0L) {
        output.writeInt64(28, amountDelta_);
      }
      if (sec60Chgpct_ != 0L) {
        output.writeInt64(29, sec60Chgpct_);
      }
      if (currentPxChange_ != 0L) {
        output.writeInt64(30, currentPxChange_);
      }
      if (currentAmountChange_ != 0L) {
        output.writeInt64(31, currentAmountChange_);
      }
      if (preclose_ != 0L) {
        output.writeInt64(32, preclose_);
      }
      if (capitalDeposit_ != 0L) {
        output.writeInt64(33, capitalDeposit_);
      }
      if (capitalFlow_ != 0L) {
        output.writeInt64(34, capitalFlow_);
      }
      if (trends_ != 0L) {
        output.writeInt64(35, trends_);
      }
      if (speculation_ != 0L) {
        output.writeInt64(36, speculation_);
      }
      if (tickSize_ != 0L) {
        output.writeInt64(37, tickSize_);
      }
      if (contractUnit_ != 0L) {
        output.writeInt64(38, contractUnit_);
      }
      if (expireDate_ != 0L) {
        output.writeInt64(39, expireDate_);
      }
      if (avg_ != 0L) {
        output.writeInt64(40, avg_);
      }
      if (up_ != 0L) {
        output.writeInt64(41, up_);
      }
      if (down_ != 0L) {
        output.writeInt64(42, down_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetExtra(),
          ExtraDefaultEntryHolder.defaultEntry,
          43);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, code_);
      }
      if (date_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, date_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, time_);
      }
      if (prevSettlement_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, prevSettlement_);
      }
      if (open_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, open_);
      }
      if (high_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, high_);
      }
      if (low_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, low_);
      }
      if (close_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, close_);
      }
      if (businessAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, businessAmount_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, amount_);
      }
      if (settlement_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, settlement_);
      }
      if (bidEntrustPx_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, bidEntrustPx_);
      }
      if (offerEntrustPx_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, offerEntrustPx_);
      }
      if (bidTotalEntrustAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, bidTotalEntrustAmount_);
      }
      if (offerTotalEntrustAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, offerTotalEntrustAmount_);
      }
      if (businessBalance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, businessBalance_);
      }
      if (preAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, preAmount_);
      }
      if (changePrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, changePrice_);
      }
      if (createTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, createTime_);
      }
      if (tradingDay_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, tradingDay_);
      }
      if (timestamp_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, timestamp_);
      }
      if (receiveTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, receiveTime_);
      }
      if (currentAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, currentAmount_);
      }
      if (pxChange_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(26, pxChange_);
      }
      if (pxChangeRate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(27, pxChangeRate_);
      }
      if (amountDelta_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(28, amountDelta_);
      }
      if (sec60Chgpct_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(29, sec60Chgpct_);
      }
      if (currentPxChange_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(30, currentPxChange_);
      }
      if (currentAmountChange_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(31, currentAmountChange_);
      }
      if (preclose_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(32, preclose_);
      }
      if (capitalDeposit_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(33, capitalDeposit_);
      }
      if (capitalFlow_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(34, capitalFlow_);
      }
      if (trends_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(35, trends_);
      }
      if (speculation_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(36, speculation_);
      }
      if (tickSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(37, tickSize_);
      }
      if (contractUnit_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(38, contractUnit_);
      }
      if (expireDate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(39, expireDate_);
      }
      if (avg_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(40, avg_);
      }
      if (up_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(41, up_);
      }
      if (down_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(42, down_);
      }
      for (java.util.Map.Entry<String, String> entry
           : internalGetExtra().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, String>
        extra__ = ExtraDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(43, extra__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancm.protobuf.Snapshot.SnapshotPro)) {
        return super.equals(obj);
      }
      com.pancm.protobuf.Snapshot.SnapshotPro other = (com.pancm.protobuf.Snapshot.SnapshotPro) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getName()
          .equals(other.getName());
      result = result && getCode()
          .equals(other.getCode());
      result = result && (getDate()
          == other.getDate());
      result = result && (getTime()
          == other.getTime());
      result = result && (getPrevSettlement()
          == other.getPrevSettlement());
      result = result && (getOpen()
          == other.getOpen());
      result = result && (getHigh()
          == other.getHigh());
      result = result && (getLow()
          == other.getLow());
      result = result && (getClose()
          == other.getClose());
      result = result && (getBusinessAmount()
          == other.getBusinessAmount());
      result = result && (getAmount()
          == other.getAmount());
      result = result && (getSettlement()
          == other.getSettlement());
      result = result && (getBidEntrustPx()
          == other.getBidEntrustPx());
      result = result && (getOfferEntrustPx()
          == other.getOfferEntrustPx());
      result = result && (getBidTotalEntrustAmount()
          == other.getBidTotalEntrustAmount());
      result = result && (getOfferTotalEntrustAmount()
          == other.getOfferTotalEntrustAmount());
      result = result && (getBusinessBalance()
          == other.getBusinessBalance());
      result = result && (getPreAmount()
          == other.getPreAmount());
      result = result && (getChangePrice()
          == other.getChangePrice());
      result = result && (getCreateTime()
          == other.getCreateTime());
      result = result && (getTradingDay()
          == other.getTradingDay());
      result = result && (getTimestamp()
          == other.getTimestamp());
      result = result && (getReceiveTime()
          == other.getReceiveTime());
      result = result && (getCurrentAmount()
          == other.getCurrentAmount());
      result = result && (getPxChange()
          == other.getPxChange());
      result = result && (getPxChangeRate()
          == other.getPxChangeRate());
      result = result && (getAmountDelta()
          == other.getAmountDelta());
      result = result && (getSec60Chgpct()
          == other.getSec60Chgpct());
      result = result && (getCurrentPxChange()
          == other.getCurrentPxChange());
      result = result && (getCurrentAmountChange()
          == other.getCurrentAmountChange());
      result = result && (getPreclose()
          == other.getPreclose());
      result = result && (getCapitalDeposit()
          == other.getCapitalDeposit());
      result = result && (getCapitalFlow()
          == other.getCapitalFlow());
      result = result && (getTrends()
          == other.getTrends());
      result = result && (getSpeculation()
          == other.getSpeculation());
      result = result && (getTickSize()
          == other.getTickSize());
      result = result && (getContractUnit()
          == other.getContractUnit());
      result = result && (getExpireDate()
          == other.getExpireDate());
      result = result && (getAvg()
          == other.getAvg());
      result = result && (getUp()
          == other.getUp());
      result = result && (getDown()
          == other.getDown());
      result = result && internalGetExtra().equals(
          other.internalGetExtra());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode().hashCode();
      hash = (37 * hash) + DATE_FIELD_NUMBER;
      hash = (53 * hash) + getDate();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + PREVSETTLEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getPrevSettlement();
      hash = (37 * hash) + OPEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOpen());
      hash = (37 * hash) + HIGH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHigh());
      hash = (37 * hash) + LOW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLow());
      hash = (37 * hash) + CLOSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getClose());
      hash = (37 * hash) + BUSINESSAMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBusinessAmount());
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (37 * hash) + SETTLEMENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSettlement());
      hash = (37 * hash) + BIDENTRUSTPX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBidEntrustPx());
      hash = (37 * hash) + OFFERENTRUSTPX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOfferEntrustPx());
      hash = (37 * hash) + BIDTOTALENTRUSTAMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBidTotalEntrustAmount());
      hash = (37 * hash) + OFFERTOTALENTRUSTAMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOfferTotalEntrustAmount());
      hash = (37 * hash) + BUSINESSBALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBusinessBalance());
      hash = (37 * hash) + PREAMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPreAmount());
      hash = (37 * hash) + CHANGEPRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChangePrice());
      hash = (37 * hash) + CREATETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreateTime());
      hash = (37 * hash) + TRADINGDAY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTradingDay());
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTimestamp());
      hash = (37 * hash) + RECEIVETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getReceiveTime());
      hash = (37 * hash) + CURRENTAMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCurrentAmount());
      hash = (37 * hash) + PXCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPxChange());
      hash = (37 * hash) + PXCHANGERATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPxChangeRate());
      hash = (37 * hash) + AMOUNTDELTA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmountDelta());
      hash = (37 * hash) + SEC60CHGPCT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSec60Chgpct());
      hash = (37 * hash) + CURRENTPXCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCurrentPxChange());
      hash = (37 * hash) + CURRENTAMOUNTCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCurrentAmountChange());
      hash = (37 * hash) + PRECLOSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPreclose());
      hash = (37 * hash) + CAPITALDEPOSIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCapitalDeposit());
      hash = (37 * hash) + CAPITALFLOW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCapitalFlow());
      hash = (37 * hash) + TRENDS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTrends());
      hash = (37 * hash) + SPECULATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSpeculation());
      hash = (37 * hash) + TICKSIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTickSize());
      hash = (37 * hash) + CONTRACTUNIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getContractUnit());
      hash = (37 * hash) + EXPIREDATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExpireDate());
      hash = (37 * hash) + AVG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAvg());
      hash = (37 * hash) + UP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUp());
      hash = (37 * hash) + DOWN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDown());
      if (!internalGetExtra().getMap().isEmpty()) {
        hash = (37 * hash) + EXTRA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetExtra().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancm.protobuf.Snapshot.SnapshotPro parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancm.protobuf.Snapshot.SnapshotPro prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SnapshotPro}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SnapshotPro)
        com.pancm.protobuf.Snapshot.SnapshotProOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancm.protobuf.Snapshot.internal_static_SnapshotPro_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 43:
            return internalGetExtra();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 43:
            return internalGetMutableExtra();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancm.protobuf.Snapshot.internal_static_SnapshotPro_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancm.protobuf.Snapshot.SnapshotPro.class, com.pancm.protobuf.Snapshot.SnapshotPro.Builder.class);
      }

      // Construct using com.pancm.protobuf.Snapshot.SnapshotPro.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        code_ = "";

        date_ = 0;

        time_ = 0;

        prevSettlement_ = 0;

        open_ = 0L;

        high_ = 0L;

        low_ = 0L;

        close_ = 0L;

        businessAmount_ = 0L;

        amount_ = 0L;

        settlement_ = 0L;

        bidEntrustPx_ = 0L;

        offerEntrustPx_ = 0L;

        bidTotalEntrustAmount_ = 0L;

        offerTotalEntrustAmount_ = 0L;

        businessBalance_ = 0L;

        preAmount_ = 0L;

        changePrice_ = 0L;

        createTime_ = 0L;

        tradingDay_ = 0L;

        timestamp_ = 0L;

        receiveTime_ = 0L;

        currentAmount_ = 0L;

        pxChange_ = 0L;

        pxChangeRate_ = 0L;

        amountDelta_ = 0L;

        sec60Chgpct_ = 0L;

        currentPxChange_ = 0L;

        currentAmountChange_ = 0L;

        preclose_ = 0L;

        capitalDeposit_ = 0L;

        capitalFlow_ = 0L;

        trends_ = 0L;

        speculation_ = 0L;

        tickSize_ = 0L;

        contractUnit_ = 0L;

        expireDate_ = 0L;

        avg_ = 0L;

        up_ = 0L;

        down_ = 0L;

        internalGetMutableExtra().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancm.protobuf.Snapshot.internal_static_SnapshotPro_descriptor;
      }

      public com.pancm.protobuf.Snapshot.SnapshotPro getDefaultInstanceForType() {
        return com.pancm.protobuf.Snapshot.SnapshotPro.getDefaultInstance();
      }

      public com.pancm.protobuf.Snapshot.SnapshotPro build() {
        com.pancm.protobuf.Snapshot.SnapshotPro result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.pancm.protobuf.Snapshot.SnapshotPro buildPartial() {
        com.pancm.protobuf.Snapshot.SnapshotPro result = new com.pancm.protobuf.Snapshot.SnapshotPro(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        result.id_ = id_;
        result.name_ = name_;
        result.code_ = code_;
        result.date_ = date_;
        result.time_ = time_;
        result.prevSettlement_ = prevSettlement_;
        result.open_ = open_;
        result.high_ = high_;
        result.low_ = low_;
        result.close_ = close_;
        result.businessAmount_ = businessAmount_;
        result.amount_ = amount_;
        result.settlement_ = settlement_;
        result.bidEntrustPx_ = bidEntrustPx_;
        result.offerEntrustPx_ = offerEntrustPx_;
        result.bidTotalEntrustAmount_ = bidTotalEntrustAmount_;
        result.offerTotalEntrustAmount_ = offerTotalEntrustAmount_;
        result.businessBalance_ = businessBalance_;
        result.preAmount_ = preAmount_;
        result.changePrice_ = changePrice_;
        result.createTime_ = createTime_;
        result.tradingDay_ = tradingDay_;
        result.timestamp_ = timestamp_;
        result.receiveTime_ = receiveTime_;
        result.currentAmount_ = currentAmount_;
        result.pxChange_ = pxChange_;
        result.pxChangeRate_ = pxChangeRate_;
        result.amountDelta_ = amountDelta_;
        result.sec60Chgpct_ = sec60Chgpct_;
        result.currentPxChange_ = currentPxChange_;
        result.currentAmountChange_ = currentAmountChange_;
        result.preclose_ = preclose_;
        result.capitalDeposit_ = capitalDeposit_;
        result.capitalFlow_ = capitalFlow_;
        result.trends_ = trends_;
        result.speculation_ = speculation_;
        result.tickSize_ = tickSize_;
        result.contractUnit_ = contractUnit_;
        result.expireDate_ = expireDate_;
        result.avg_ = avg_;
        result.up_ = up_;
        result.down_ = down_;
        result.extra_ = internalGetExtra();
        result.extra_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancm.protobuf.Snapshot.SnapshotPro) {
          return mergeFrom((com.pancm.protobuf.Snapshot.SnapshotPro)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancm.protobuf.Snapshot.SnapshotPro other) {
        if (other == com.pancm.protobuf.Snapshot.SnapshotPro.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getCode().isEmpty()) {
          code_ = other.code_;
          onChanged();
        }
        if (other.getDate() != 0) {
          setDate(other.getDate());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getPrevSettlement() != 0) {
          setPrevSettlement(other.getPrevSettlement());
        }
        if (other.getOpen() != 0L) {
          setOpen(other.getOpen());
        }
        if (other.getHigh() != 0L) {
          setHigh(other.getHigh());
        }
        if (other.getLow() != 0L) {
          setLow(other.getLow());
        }
        if (other.getClose() != 0L) {
          setClose(other.getClose());
        }
        if (other.getBusinessAmount() != 0L) {
          setBusinessAmount(other.getBusinessAmount());
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        if (other.getSettlement() != 0L) {
          setSettlement(other.getSettlement());
        }
        if (other.getBidEntrustPx() != 0L) {
          setBidEntrustPx(other.getBidEntrustPx());
        }
        if (other.getOfferEntrustPx() != 0L) {
          setOfferEntrustPx(other.getOfferEntrustPx());
        }
        if (other.getBidTotalEntrustAmount() != 0L) {
          setBidTotalEntrustAmount(other.getBidTotalEntrustAmount());
        }
        if (other.getOfferTotalEntrustAmount() != 0L) {
          setOfferTotalEntrustAmount(other.getOfferTotalEntrustAmount());
        }
        if (other.getBusinessBalance() != 0L) {
          setBusinessBalance(other.getBusinessBalance());
        }
        if (other.getPreAmount() != 0L) {
          setPreAmount(other.getPreAmount());
        }
        if (other.getChangePrice() != 0L) {
          setChangePrice(other.getChangePrice());
        }
        if (other.getCreateTime() != 0L) {
          setCreateTime(other.getCreateTime());
        }
        if (other.getTradingDay() != 0L) {
          setTradingDay(other.getTradingDay());
        }
        if (other.getTimestamp() != 0L) {
          setTimestamp(other.getTimestamp());
        }
        if (other.getReceiveTime() != 0L) {
          setReceiveTime(other.getReceiveTime());
        }
        if (other.getCurrentAmount() != 0L) {
          setCurrentAmount(other.getCurrentAmount());
        }
        if (other.getPxChange() != 0L) {
          setPxChange(other.getPxChange());
        }
        if (other.getPxChangeRate() != 0L) {
          setPxChangeRate(other.getPxChangeRate());
        }
        if (other.getAmountDelta() != 0L) {
          setAmountDelta(other.getAmountDelta());
        }
        if (other.getSec60Chgpct() != 0L) {
          setSec60Chgpct(other.getSec60Chgpct());
        }
        if (other.getCurrentPxChange() != 0L) {
          setCurrentPxChange(other.getCurrentPxChange());
        }
        if (other.getCurrentAmountChange() != 0L) {
          setCurrentAmountChange(other.getCurrentAmountChange());
        }
        if (other.getPreclose() != 0L) {
          setPreclose(other.getPreclose());
        }
        if (other.getCapitalDeposit() != 0L) {
          setCapitalDeposit(other.getCapitalDeposit());
        }
        if (other.getCapitalFlow() != 0L) {
          setCapitalFlow(other.getCapitalFlow());
        }
        if (other.getTrends() != 0L) {
          setTrends(other.getTrends());
        }
        if (other.getSpeculation() != 0L) {
          setSpeculation(other.getSpeculation());
        }
        if (other.getTickSize() != 0L) {
          setTickSize(other.getTickSize());
        }
        if (other.getContractUnit() != 0L) {
          setContractUnit(other.getContractUnit());
        }
        if (other.getExpireDate() != 0L) {
          setExpireDate(other.getExpireDate());
        }
        if (other.getAvg() != 0L) {
          setAvg(other.getAvg());
        }
        if (other.getUp() != 0L) {
          setUp(other.getUp());
        }
        if (other.getDown() != 0L) {
          setDown(other.getDown());
        }
        internalGetMutableExtra().mergeFrom(
            other.internalGetExtra());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancm.protobuf.Snapshot.SnapshotPro parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancm.protobuf.Snapshot.SnapshotPro) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private Object id_ = "";
      /**
       * <code>string id = 1;</code>
       */
      public String getId() {
        Object ref = id_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder clearId() {

        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        id_ = value;
        onChanged();
        return this;
      }

      private Object name_ = "";
      /**
       * <pre>
       * 合约名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 合约名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 合约名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 合约名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {

        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 合约名称
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        name_ = value;
        onChanged();
        return this;
      }

      private Object code_ = "";
      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public String getCode() {
        Object ref = code_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          code_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public Builder setCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public Builder clearCode() {

        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        code_ = value;
        onChanged();
        return this;
      }

      private int date_ ;
      /**
       * <pre>
       * 起始日期
       * </pre>
       *
       * <code>int32 date = 4;</code>
       */
      public int getDate() {
        return date_;
      }
      /**
       * <pre>
       * 起始日期
       * </pre>
       *
       * <code>int32 date = 4;</code>
       */
      public Builder setDate(int value) {

        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 起始日期
       * </pre>
       *
       * <code>int32 date = 4;</code>
       */
      public Builder clearDate() {

        date_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <code>int32 time = 5;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>int32 time = 5;</code>
       */
      public Builder setTime(int value) {

        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 time = 5;</code>
       */
      public Builder clearTime() {

        time_ = 0;
        onChanged();
        return this;
      }

      private int prevSettlement_ ;
      /**
       * <pre>
       * 开始日期
       * </pre>
       *
       * <code>int32 prevSettlement = 6;</code>
       */
      public int getPrevSettlement() {
        return prevSettlement_;
      }
      /**
       * <pre>
       * 开始日期
       * </pre>
       *
       * <code>int32 prevSettlement = 6;</code>
       */
      public Builder setPrevSettlement(int value) {

        prevSettlement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 开始日期
       * </pre>
       *
       * <code>int32 prevSettlement = 6;</code>
       */
      public Builder clearPrevSettlement() {

        prevSettlement_ = 0;
        onChanged();
        return this;
      }

      private long open_ ;
      /**
       * <pre>
       * 开盘价
       * </pre>
       *
       * <code>int64 open = 7;</code>
       */
      public long getOpen() {
        return open_;
      }
      /**
       * <pre>
       * 开盘价
       * </pre>
       *
       * <code>int64 open = 7;</code>
       */
      public Builder setOpen(long value) {

        open_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 开盘价
       * </pre>
       *
       * <code>int64 open = 7;</code>
       */
      public Builder clearOpen() {

        open_ = 0L;
        onChanged();
        return this;
      }

      private long high_ ;
      /**
       * <pre>
       * 最高价
       * </pre>
       *
       * <code>int64 high = 8;</code>
       */
      public long getHigh() {
        return high_;
      }
      /**
       * <pre>
       * 最高价
       * </pre>
       *
       * <code>int64 high = 8;</code>
       */
      public Builder setHigh(long value) {

        high_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 最高价
       * </pre>
       *
       * <code>int64 high = 8;</code>
       */
      public Builder clearHigh() {

        high_ = 0L;
        onChanged();
        return this;
      }

      private long low_ ;
      /**
       * <pre>
       * 最低价
       * </pre>
       *
       * <code>int64 low = 9;</code>
       */
      public long getLow() {
        return low_;
      }
      /**
       * <pre>
       * 最低价
       * </pre>
       *
       * <code>int64 low = 9;</code>
       */
      public Builder setLow(long value) {

        low_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 最低价
       * </pre>
       *
       * <code>int64 low = 9;</code>
       */
      public Builder clearLow() {

        low_ = 0L;
        onChanged();
        return this;
      }

      private long close_ ;
      /**
       * <pre>
       * 收盘价
       * </pre>
       *
       * <code>int64 close = 10;</code>
       */
      public long getClose() {
        return close_;
      }
      /**
       * <pre>
       * 收盘价
       * </pre>
       *
       * <code>int64 close = 10;</code>
       */
      public Builder setClose(long value) {

        close_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 收盘价
       * </pre>
       *
       * <code>int64 close = 10;</code>
       */
      public Builder clearClose() {

        close_ = 0L;
        onChanged();
        return this;
      }

      private long businessAmount_ ;
      /**
       * <pre>
       * 成交量(总手)
       * </pre>
       *
       * <code>int64 businessAmount = 11;</code>
       */
      public long getBusinessAmount() {
        return businessAmount_;
      }
      /**
       * <pre>
       * 成交量(总手)
       * </pre>
       *
       * <code>int64 businessAmount = 11;</code>
       */
      public Builder setBusinessAmount(long value) {

        businessAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 成交量(总手)
       * </pre>
       *
       * <code>int64 businessAmount = 11;</code>
       */
      public Builder clearBusinessAmount() {

        businessAmount_ = 0L;
        onChanged();
        return this;
      }

      private long amount_ ;
      /**
       * <pre>
       * 持仓量
       * </pre>
       *
       * <code>int64 amount = 12;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * 持仓量
       * </pre>
       *
       * <code>int64 amount = 12;</code>
       */
      public Builder setAmount(long value) {

        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 持仓量
       * </pre>
       *
       * <code>int64 amount = 12;</code>
       */
      public Builder clearAmount() {

        amount_ = 0L;
        onChanged();
        return this;
      }

      private long settlement_ ;
      /**
       * <pre>
       * 结算价
       * </pre>
       *
       * <code>int64 settlement = 13;</code>
       */
      public long getSettlement() {
        return settlement_;
      }
      /**
       * <pre>
       * 结算价
       * </pre>
       *
       * <code>int64 settlement = 13;</code>
       */
      public Builder setSettlement(long value) {

        settlement_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 结算价
       * </pre>
       *
       * <code>int64 settlement = 13;</code>
       */
      public Builder clearSettlement() {

        settlement_ = 0L;
        onChanged();
        return this;
      }

      private long bidEntrustPx_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 bidEntrustPx = 14;</code>
       */
      public long getBidEntrustPx() {
        return bidEntrustPx_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 bidEntrustPx = 14;</code>
       */
      public Builder setBidEntrustPx(long value) {

        bidEntrustPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 bidEntrustPx = 14;</code>
       */
      public Builder clearBidEntrustPx() {

        bidEntrustPx_ = 0L;
        onChanged();
        return this;
      }

      private long offerEntrustPx_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 offerEntrustPx = 15;</code>
       */
      public long getOfferEntrustPx() {
        return offerEntrustPx_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 offerEntrustPx = 15;</code>
       */
      public Builder setOfferEntrustPx(long value) {

        offerEntrustPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 offerEntrustPx = 15;</code>
       */
      public Builder clearOfferEntrustPx() {

        offerEntrustPx_ = 0L;
        onChanged();
        return this;
      }

      private long bidTotalEntrustAmount_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 bidTotalEntrustAmount = 16;</code>
       */
      public long getBidTotalEntrustAmount() {
        return bidTotalEntrustAmount_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 bidTotalEntrustAmount = 16;</code>
       */
      public Builder setBidTotalEntrustAmount(long value) {

        bidTotalEntrustAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 bidTotalEntrustAmount = 16;</code>
       */
      public Builder clearBidTotalEntrustAmount() {

        bidTotalEntrustAmount_ = 0L;
        onChanged();
        return this;
      }

      private long offerTotalEntrustAmount_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 offerTotalEntrustAmount = 17;</code>
       */
      public long getOfferTotalEntrustAmount() {
        return offerTotalEntrustAmount_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 offerTotalEntrustAmount = 17;</code>
       */
      public Builder setOfferTotalEntrustAmount(long value) {

        offerTotalEntrustAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 offerTotalEntrustAmount = 17;</code>
       */
      public Builder clearOfferTotalEntrustAmount() {

        offerTotalEntrustAmount_ = 0L;
        onChanged();
        return this;
      }

      private long businessBalance_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 businessBalance = 18;</code>
       */
      public long getBusinessBalance() {
        return businessBalance_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 businessBalance = 18;</code>
       */
      public Builder setBusinessBalance(long value) {

        businessBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 businessBalance = 18;</code>
       */
      public Builder clearBusinessBalance() {

        businessBalance_ = 0L;
        onChanged();
        return this;
      }

      private long preAmount_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 preAmount = 19;</code>
       */
      public long getPreAmount() {
        return preAmount_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 preAmount = 19;</code>
       */
      public Builder setPreAmount(long value) {

        preAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 preAmount = 19;</code>
       */
      public Builder clearPreAmount() {

        preAmount_ = 0L;
        onChanged();
        return this;
      }

      private long changePrice_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 changePrice = 20;</code>
       */
      public long getChangePrice() {
        return changePrice_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 changePrice = 20;</code>
       */
      public Builder setChangePrice(long value) {

        changePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 changePrice = 20;</code>
       */
      public Builder clearChangePrice() {

        changePrice_ = 0L;
        onChanged();
        return this;
      }

      private long createTime_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 createTime = 21;</code>
       */
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 createTime = 21;</code>
       */
      public Builder setCreateTime(long value) {

        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 createTime = 21;</code>
       */
      public Builder clearCreateTime() {

        createTime_ = 0L;
        onChanged();
        return this;
      }

      private long tradingDay_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 tradingDay = 22;</code>
       */
      public long getTradingDay() {
        return tradingDay_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 tradingDay = 22;</code>
       */
      public Builder setTradingDay(long value) {

        tradingDay_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 tradingDay = 22;</code>
       */
      public Builder clearTradingDay() {

        tradingDay_ = 0L;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 timestamp = 23;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 timestamp = 23;</code>
       */
      public Builder setTimestamp(long value) {

        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 timestamp = 23;</code>
       */
      public Builder clearTimestamp() {

        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private long receiveTime_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 receiveTime = 24;</code>
       */
      public long getReceiveTime() {
        return receiveTime_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 receiveTime = 24;</code>
       */
      public Builder setReceiveTime(long value) {

        receiveTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 receiveTime = 24;</code>
       */
      public Builder clearReceiveTime() {

        receiveTime_ = 0L;
        onChanged();
        return this;
      }

      private long currentAmount_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 currentAmount = 25;</code>
       */
      public long getCurrentAmount() {
        return currentAmount_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 currentAmount = 25;</code>
       */
      public Builder setCurrentAmount(long value) {

        currentAmount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 currentAmount = 25;</code>
       */
      public Builder clearCurrentAmount() {

        currentAmount_ = 0L;
        onChanged();
        return this;
      }

      private long pxChange_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 pxChange = 26;</code>
       */
      public long getPxChange() {
        return pxChange_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 pxChange = 26;</code>
       */
      public Builder setPxChange(long value) {

        pxChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 pxChange = 26;</code>
       */
      public Builder clearPxChange() {

        pxChange_ = 0L;
        onChanged();
        return this;
      }

      private long pxChangeRate_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 pxChangeRate = 27;</code>
       */
      public long getPxChangeRate() {
        return pxChangeRate_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 pxChangeRate = 27;</code>
       */
      public Builder setPxChangeRate(long value) {

        pxChangeRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 pxChangeRate = 27;</code>
       */
      public Builder clearPxChangeRate() {

        pxChangeRate_ = 0L;
        onChanged();
        return this;
      }

      private long amountDelta_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 amountDelta = 28;</code>
       */
      public long getAmountDelta() {
        return amountDelta_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 amountDelta = 28;</code>
       */
      public Builder setAmountDelta(long value) {

        amountDelta_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 amountDelta = 28;</code>
       */
      public Builder clearAmountDelta() {

        amountDelta_ = 0L;
        onChanged();
        return this;
      }

      private long sec60Chgpct_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 sec60Chgpct = 29;</code>
       */
      public long getSec60Chgpct() {
        return sec60Chgpct_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 sec60Chgpct = 29;</code>
       */
      public Builder setSec60Chgpct(long value) {

        sec60Chgpct_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 sec60Chgpct = 29;</code>
       */
      public Builder clearSec60Chgpct() {

        sec60Chgpct_ = 0L;
        onChanged();
        return this;
      }

      private long currentPxChange_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 currentPxChange = 30;</code>
       */
      public long getCurrentPxChange() {
        return currentPxChange_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 currentPxChange = 30;</code>
       */
      public Builder setCurrentPxChange(long value) {

        currentPxChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 currentPxChange = 30;</code>
       */
      public Builder clearCurrentPxChange() {

        currentPxChange_ = 0L;
        onChanged();
        return this;
      }

      private long currentAmountChange_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 currentAmountChange = 31;</code>
       */
      public long getCurrentAmountChange() {
        return currentAmountChange_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 currentAmountChange = 31;</code>
       */
      public Builder setCurrentAmountChange(long value) {

        currentAmountChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 currentAmountChange = 31;</code>
       */
      public Builder clearCurrentAmountChange() {

        currentAmountChange_ = 0L;
        onChanged();
        return this;
      }

      private long preclose_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 preclose = 32;</code>
       */
      public long getPreclose() {
        return preclose_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 preclose = 32;</code>
       */
      public Builder setPreclose(long value) {

        preclose_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 preclose = 32;</code>
       */
      public Builder clearPreclose() {

        preclose_ = 0L;
        onChanged();
        return this;
      }

      private long capitalDeposit_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 capitalDeposit = 33;</code>
       */
      public long getCapitalDeposit() {
        return capitalDeposit_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 capitalDeposit = 33;</code>
       */
      public Builder setCapitalDeposit(long value) {

        capitalDeposit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 capitalDeposit = 33;</code>
       */
      public Builder clearCapitalDeposit() {

        capitalDeposit_ = 0L;
        onChanged();
        return this;
      }

      private long capitalFlow_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 capitalFlow = 34;</code>
       */
      public long getCapitalFlow() {
        return capitalFlow_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 capitalFlow = 34;</code>
       */
      public Builder setCapitalFlow(long value) {

        capitalFlow_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 capitalFlow = 34;</code>
       */
      public Builder clearCapitalFlow() {

        capitalFlow_ = 0L;
        onChanged();
        return this;
      }

      private long trends_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 trends = 35;</code>
       */
      public long getTrends() {
        return trends_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 trends = 35;</code>
       */
      public Builder setTrends(long value) {

        trends_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 trends = 35;</code>
       */
      public Builder clearTrends() {

        trends_ = 0L;
        onChanged();
        return this;
      }

      private long speculation_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 speculation = 36;</code>
       */
      public long getSpeculation() {
        return speculation_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 speculation = 36;</code>
       */
      public Builder setSpeculation(long value) {

        speculation_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 speculation = 36;</code>
       */
      public Builder clearSpeculation() {

        speculation_ = 0L;
        onChanged();
        return this;
      }

      private long tickSize_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 tickSize = 37;</code>
       */
      public long getTickSize() {
        return tickSize_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 tickSize = 37;</code>
       */
      public Builder setTickSize(long value) {

        tickSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 tickSize = 37;</code>
       */
      public Builder clearTickSize() {

        tickSize_ = 0L;
        onChanged();
        return this;
      }

      private long contractUnit_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 contractUnit = 38;</code>
       */
      public long getContractUnit() {
        return contractUnit_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 contractUnit = 38;</code>
       */
      public Builder setContractUnit(long value) {

        contractUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 contractUnit = 38;</code>
       */
      public Builder clearContractUnit() {

        contractUnit_ = 0L;
        onChanged();
        return this;
      }

      private long expireDate_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 expireDate = 39;</code>
       */
      public long getExpireDate() {
        return expireDate_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 expireDate = 39;</code>
       */
      public Builder setExpireDate(long value) {

        expireDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 expireDate = 39;</code>
       */
      public Builder clearExpireDate() {

        expireDate_ = 0L;
        onChanged();
        return this;
      }

      private long avg_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 avg = 40;</code>
       */
      public long getAvg() {
        return avg_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 avg = 40;</code>
       */
      public Builder setAvg(long value) {

        avg_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 avg = 40;</code>
       */
      public Builder clearAvg() {

        avg_ = 0L;
        onChanged();
        return this;
      }

      private long up_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 up = 41;</code>
       */
      public long getUp() {
        return up_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 up = 41;</code>
       */
      public Builder setUp(long value) {

        up_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 up = 41;</code>
       */
      public Builder clearUp() {

        up_ = 0L;
        onChanged();
        return this;
      }

      private long down_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 down = 42;</code>
       */
      public long getDown() {
        return down_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 down = 42;</code>
       */
      public Builder setDown(long value) {

        down_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>int64 down = 42;</code>
       */
      public Builder clearDown() {

        down_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          String, String> extra_;
      private com.google.protobuf.MapField<String, String>
      internalGetExtra() {
        if (extra_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ExtraDefaultEntryHolder.defaultEntry);
        }
        return extra_;
      }
      private com.google.protobuf.MapField<String, String>
      internalGetMutableExtra() {
        onChanged();;
        if (extra_ == null) {
          extra_ = com.google.protobuf.MapField.newMapField(
              ExtraDefaultEntryHolder.defaultEntry);
        }
        if (!extra_.isMutable()) {
          extra_ = extra_.copy();
        }
        return extra_;
      }

      public int getExtraCount() {
        return internalGetExtra().getMap().size();
      }
      /**
       * <pre>
       *扩展参数
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 43;</code>
       */

      public boolean containsExtra(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetExtra().getMap().containsKey(key);
      }
      /**
       * Use {@link #getExtraMap()} instead.
       */
      @Deprecated
      public java.util.Map<String, String> getExtra() {
        return getExtraMap();
      }
      /**
       * <pre>
       *扩展参数
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 43;</code>
       */

      public java.util.Map<String, String> getExtraMap() {
        return internalGetExtra().getMap();
      }
      /**
       * <pre>
       *扩展参数
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 43;</code>
       */

      public String getExtraOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetExtra().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *扩展参数
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 43;</code>
       */

      public String getExtraOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetExtra().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearExtra() {
        internalGetMutableExtra().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *扩展参数
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 43;</code>
       */

      public Builder removeExtra(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableExtra().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, String>
      getMutableExtra() {
        return internalGetMutableExtra().getMutableMap();
      }
      /**
       * <pre>
       *扩展参数
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 43;</code>
       */
      public Builder putExtra(
          String key,
          String value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableExtra().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *扩展参数
       * </pre>
       *
       * <code>map&lt;string, string&gt; extra = 43;</code>
       */

      public Builder putAllExtra(
          java.util.Map<String, String> values) {
        internalGetMutableExtra().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SnapshotPro)
    }

    // @@protoc_insertion_point(class_scope:SnapshotPro)
    private static final com.pancm.protobuf.Snapshot.SnapshotPro DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancm.protobuf.Snapshot.SnapshotPro();
    }

    public static com.pancm.protobuf.Snapshot.SnapshotPro getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SnapshotPro>
        PARSER = new com.google.protobuf.AbstractParser<SnapshotPro>() {
      public SnapshotPro parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SnapshotPro(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SnapshotPro> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SnapshotPro> getParserForType() {
      return PARSER;
    }

    public com.pancm.protobuf.Snapshot.SnapshotPro getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SnapshotPro_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SnapshotPro_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SnapshotPro_ExtraEntry_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SnapshotPro_ExtraEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017SnapshotP.proto\"\230\007\n\013SnapshotPro\022\n\n\002id\030" +
      "\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004code\030\003 \001(\t\022\014\n\004dat" +
      "e\030\004 \001(\005\022\014\n\004time\030\005 \001(\005\022\026\n\016prevSettlement\030" +
      "\006 \001(\005\022\014\n\004open\030\007 \001(\003\022\014\n\004high\030\010 \001(\003\022\013\n\003low" +
      "\030\t \001(\003\022\r\n\005close\030\n \001(\003\022\026\n\016businessAmount\030" +
      "\013 \001(\003\022\016\n\006amount\030\014 \001(\003\022\022\n\nsettlement\030\r \001(" +
      "\003\022\024\n\014bidEntrustPx\030\016 \001(\003\022\026\n\016offerEntrustP" +
      "x\030\017 \001(\003\022\035\n\025bidTotalEntrustAmount\030\020 \001(\003\022\037" +
      "\n\027offerTotalEntrustAmount\030\021 \001(\003\022\027\n\017busin" +
      "essBalance\030\022 \001(\003\022\021\n\tpreAmount\030\023 \001(\003\022\023\n\013c",
      "hangePrice\030\024 \001(\003\022\022\n\ncreateTime\030\025 \001(\003\022\022\n\n" +
      "tradingDay\030\026 \001(\003\022\021\n\ttimestamp\030\027 \001(\003\022\023\n\013r" +
      "eceiveTime\030\030 \001(\003\022\025\n\rcurrentAmount\030\031 \001(\003\022" +
      "\020\n\010pxChange\030\032 \001(\003\022\024\n\014pxChangeRate\030\033 \001(\003\022" +
      "\023\n\013amountDelta\030\034 \001(\003\022\023\n\013sec60Chgpct\030\035 \001(" +
      "\003\022\027\n\017currentPxChange\030\036 \001(\003\022\033\n\023currentAmo" +
      "untChange\030\037 \001(\003\022\020\n\010preclose\030  \001(\003\022\026\n\016cap" +
      "italDeposit\030! \001(\003\022\023\n\013capitalFlow\030\" \001(\003\022\016" +
      "\n\006trends\030# \001(\003\022\023\n\013speculation\030$ \001(\003\022\020\n\010t" +
      "ickSize\030% \001(\003\022\024\n\014contractUnit\030& \001(\003\022\022\n\ne",
      "xpireDate\030\' \001(\003\022\013\n\003avg\030( \001(\003\022\n\n\002up\030) \001(\003" +
      "\022\014\n\004down\030* \001(\003\022&\n\005extra\030+ \003(\0132\027.Snapshot" +
      "Pro.ExtraEntry\032,\n\nExtraEntry\022\013\n\003key\030\001 \001(" +
      "\t\022\r\n\005value\030\002 \001(\t:\0028\001B\036\n\022com.pancm.protob" +
      "ufB\010Snapshotb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SnapshotPro_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SnapshotPro_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SnapshotPro_descriptor,
        new String[] { "Id", "Name", "Code", "Date", "Time", "PrevSettlement", "Open", "High", "Low", "Close", "BusinessAmount", "Amount", "Settlement", "BidEntrustPx", "OfferEntrustPx", "BidTotalEntrustAmount", "OfferTotalEntrustAmount", "BusinessBalance", "PreAmount", "ChangePrice", "CreateTime", "TradingDay", "Timestamp", "ReceiveTime", "CurrentAmount", "PxChange", "PxChangeRate", "AmountDelta", "Sec60Chgpct", "CurrentPxChange", "CurrentAmountChange", "Preclose", "CapitalDeposit", "CapitalFlow", "Trends", "Speculation", "TickSize", "ContractUnit", "ExpireDate", "Avg", "Up", "Down", "Extra", });
    internal_static_SnapshotPro_ExtraEntry_descriptor =
      internal_static_SnapshotPro_descriptor.getNestedTypes().get(0);
    internal_static_SnapshotPro_ExtraEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SnapshotPro_ExtraEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
