// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kLineCache.proto

package com.pancm.protobuf;

public final class KLine {
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_KLineCache_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_KLineCache_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;

  static {
    String[] descriptorData = {
        "\n\020kLineCache.proto\"\361\005\n\nKLineCache\022\014\n\004nam" +
            "e\030\002 \001(\t\022\014\n\004code\030\003 \001(\t\022\016\n\006period\030\004 \001(\005\022\014\n" +
            "\004date\030\005 \001(\005\022\014\n\004time\030\006 \001(\005\022\021\n\tstartDate\030\007" +
            " \001(\005\022\020\n\010startMin\030\010 \001(\005\022\014\n\004open\030\t \001(\003\022\014\n\004" +
            "high\030\n \001(\003\022\013\n\003low\030\013 \001(\003\022\r\n\005close\030\014 \001(\003\022\023" +
            "\n\013closeChange\030\r \001(\003\022\027\n\017closeChangeRate\030\016" +
            " \001(\003\022\022\n\nsettlement\030\017 \001(\003\022\016\n\006amount\030\020 \001(\003" +
            "\022\024\n\014amountChange\030\021 \001(\003\022\026\n\016businessAmount" +
            "\030\022 \001(\003\022\034\n\024businessAmountChange\030\023 \001(\003\022\027\n\017" +
            "businessBalance\030\024 \001(\003\022\025\n\rturnoverRatio\030\025",
        " \001(\003\022\017\n\007barTime\030\026 \001(\003\022\016\n\006market\030\027 \001(\t\022\036\n" +
            "\026sumToEndBusinessAmount\030\030 \001(\003\022\037\n\027sumToEn" +
            "dBusinessBalance\030\031 \001(\003\022\021\n\tlastClose\030\032 \001(" +
            "\003\022\022\n\nperiodTime\030\033 \001(\003\022\022\n\nupdateTime\030\034 \001(" +
            "\003\022\020\n\010rangePCT\030\035 \001(\002\022\024\n\014rangeOfPrice\030\036 \001(" +
            "\002\022\025\n\raccuHighPrice\030\037 \001(\003\022\024\n\014accuLowPrice" +
            "\030  \001(\003\022\031\n\021accuBargainAmount\030! \001(\003\022\026\n\016acc" +
            "uBargainSum\030\" \001(\003\022\020\n\010changeOI\030# \001(\003\022\013\n\003a" +
            "vg\030$ \001(\003\022\027\n\017tradePeriodNums\030% \001(\005\022\023\n\013tra" +
            "dingDate\030& \001(\005B\033\n\022com.pancm.protobufB\005KL",
        "ineb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
        .internalBuildGeneratedFileFrom(descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[]{
            }, assigner);
    internal_static_KLineCache_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_KLineCache_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_KLineCache_descriptor,
        new String[]{"Name", "Code", "Period", "Date", "Time", "StartDate", "StartMin", "Open", "High", "Low", "Close", "CloseChange", "CloseChangeRate", "Settlement", "Amount", "AmountChange", "BusinessAmount", "BusinessAmountChange", "BusinessBalance", "TurnoverRatio", "BarTime", "Market", "SumToEndBusinessAmount", "SumToEndBusinessBalance", "LastClose", "PeriodTime", "UpdateTime", "RangePCT", "RangeOfPrice", "AccuHighPrice", "AccuLowPrice", "AccuBargainAmount", "AccuBargainSum", "ChangeOI", "Avg", "TradePeriodNums", "TradingDate",});
  }

  private KLine() {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }

  public interface KLineCacheOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KLineCache)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *    string id = 1;
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    String getName();

    /**
     * <pre>
     *    string id = 1;
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
    getNameBytes();

    /**
     * <pre>
     * 证券代码
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    String getCode();

    /**
     * <pre>
     * 证券代码
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    com.google.protobuf.ByteString
    getCodeBytes();

    /**
     * <pre>
     * 周期类型
     * </pre>
     *
     * <code>int32 period = 4;</code>
     */
    int getPeriod();

    /**
     * <pre>
     * 起始日期
     * </pre>
     *
     * <code>int32 date = 5;</code>
     */
    int getDate();

    /**
     * <code>int32 time = 6;</code>
     */
    int getTime();

    /**
     * <pre>
     * 开始日期
     * </pre>
     *
     * <code>int32 startDate = 7;</code>
     */
    int getStartDate();

    /**
     * <pre>
     * 开始分钟
     * </pre>
     *
     * <code>int32 startMin = 8;</code>
     */
    int getStartMin();

    /**
     * <pre>
     * 开盘价
     * </pre>
     *
     * <code>int64 open = 9;</code>
     */
    long getOpen();

    /**
     * <pre>
     * 最高价
     * </pre>
     *
     * <code>int64 high = 10;</code>
     */
    long getHigh();

    /**
     * <pre>
     * 最低价
     * </pre>
     *
     * <code>int64 low = 11;</code>
     */
    long getLow();

    /**
     * <pre>
     * 收盘价
     * </pre>
     *
     * <code>int64 close = 12;</code>
     */
    long getClose();

    /**
     * <pre>
     * 收盘涨跌
     * </pre>
     *
     * <code>int64 closeChange = 13;</code>
     */
    long getCloseChange();

    /**
     * <pre>
     * 收盘涨跌幅
     * </pre>
     *
     * <code>int64 closeChangeRate = 14;</code>
     */
    long getCloseChangeRate();

    /**
     * <pre>
     * 结算价
     * </pre>
     *
     * <code>int64 settlement = 15;</code>
     */
    long getSettlement();

    /**
     * <pre>
     * 持仓量
     * </pre>
     *
     * <code>int64 amount = 16;</code>
     */
    long getAmount();

    /**
     * <pre>
     * 持仓量涨跌
     * </pre>
     *
     * <code>int64 amountChange = 17;</code>
     */
    long getAmountChange();

    /**
     * <pre>
     * 成交量(总手)
     * </pre>
     *
     * <code>int64 businessAmount = 18;</code>
     */
    long getBusinessAmount();

    /**
     * <pre>
     * 成交涨跌
     * </pre>
     *
     * <code>int64 businessAmountChange = 19;</code>
     */
    long getBusinessAmountChange();

    /**
     * <pre>
     * 成交额
     * </pre>
     *
     * <code>int64 businessBalance = 20;</code>
     */
    long getBusinessBalance();

    /**
     * <pre>
     * 换手率
     * </pre>
     *
     * <code>int64 turnoverRatio = 21;</code>
     */
    long getTurnoverRatio();

    /**
     * <pre>
     * barTime
     * </pre>
     *
     * <code>int64 barTime = 22;</code>
     */
    long getBarTime();

    /**
     * <pre>
     * barTime
     * </pre>
     *
     * <code>string market = 23;</code>
     */
    String getMarket();

    /**
     * <pre>
     * barTime
     * </pre>
     *
     * <code>string market = 23;</code>
     */
    com.google.protobuf.ByteString
    getMarketBytes();

    /**
     * <pre>
     * 截止当前bar结束的成交量，计算成交量用
     * </pre>
     *
     * <code>int64 sumToEndBusinessAmount = 24;</code>
     */
    long getSumToEndBusinessAmount();

    /**
     * <pre>
     * 截止当前bar结束的成交额，计算成交额用
     * </pre>
     *
     * <code>int64 sumToEndBusinessBalance = 25;</code>
     */
    long getSumToEndBusinessBalance();

    /**
     * <pre>
     * 上根bar的close;
     * </pre>
     *
     * <code>int64 lastClose = 26;</code>
     */
    long getLastClose();

    /**
     * <pre>
     * 年k periodTime=yyyy  月k periodTime=yyyyMM 周K periodTime=yyyyMMww
     * </pre>
     *
     * <code>int64 periodTime = 27;</code>
     */
    long getPeriodTime();

    /**
     * <pre>
     * 最新bar的修改时间.
     * </pre>
     *
     * <code>int64 updateTime = 28;</code>
     */
    long getUpdateTime();

    /**
     * <pre>
     * 2017-11-2 add property
     * </pre>
     *
     * <code>float rangePCT = 29;</code>
     */
    float getRangePCT();

    /**
     * <pre>
     * 区间绝对振幅
     * </pre>
     *
     * <code>float rangeOfPrice = 30;</code>
     */
    float getRangeOfPrice();

    /**
     * <pre>
     * 至今最高价
     * </pre>
     *
     * <code>int64 accuHighPrice = 31;</code>
     */
    long getAccuHighPrice();

    /**
     * <pre>
     * 至今最低价
     * </pre>
     *
     * <code>int64 accuLowPrice = 32;</code>
     */
    long getAccuLowPrice();

    /**
     * <pre>
     * 至今成交量
     * </pre>
     *
     * <code>int64 accuBargainAmount = 33;</code>
     */
    long getAccuBargainAmount();

    /**
     * <pre>
     * 至今成交额
     * </pre>
     *
     * <code>int64 accuBargainSum = 34;</code>
     */
    long getAccuBargainSum();

    /**
     * <pre>
     * 价格变化
     * </pre>
     *
     * <code>int64 changeOI = 35;</code>
     */
    long getChangeOI();

    /**
     * <pre>
     * 区间均价
     * </pre>
     *
     * <code>int64 avg = 36;</code>
     */
    long getAvg();

    /**
     * <pre>
     * 交易周期数
     * </pre>
     *
     * <code>int32 tradePeriodNums = 37;</code>
     */
    int getTradePeriodNums();

    /**
     * <pre>
     * 交易日
     * </pre>
     *
     * <code>int32 tradingDate = 38;</code>
     */
    int getTradingDate();
  }

  /**
   * <pre>
   * TODO 使用proto定义的规则,生成java类以及PO类以及EPL的event
   * </pre>
   *
   * Protobuf type {@code KLineCache}
   */
  public static final class KLineCache extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:KLineCache)
      KLineCacheOrBuilder {
    public static final int NAME_FIELD_NUMBER = 2;
    public static final int CODE_FIELD_NUMBER = 3;
    public static final int PERIOD_FIELD_NUMBER = 4;
    public static final int DATE_FIELD_NUMBER = 5;
    public static final int TIME_FIELD_NUMBER = 6;
    public static final int STARTDATE_FIELD_NUMBER = 7;
    public static final int STARTMIN_FIELD_NUMBER = 8;
    public static final int OPEN_FIELD_NUMBER = 9;
    public static final int HIGH_FIELD_NUMBER = 10;
    public static final int LOW_FIELD_NUMBER = 11;
    public static final int CLOSE_FIELD_NUMBER = 12;
    public static final int CLOSECHANGE_FIELD_NUMBER = 13;
    public static final int CLOSECHANGERATE_FIELD_NUMBER = 14;
    public static final int SETTLEMENT_FIELD_NUMBER = 15;
    public static final int AMOUNT_FIELD_NUMBER = 16;
    public static final int AMOUNTCHANGE_FIELD_NUMBER = 17;
    public static final int BUSINESSAMOUNT_FIELD_NUMBER = 18;
    public static final int BUSINESSAMOUNTCHANGE_FIELD_NUMBER = 19;
    public static final int BUSINESSBALANCE_FIELD_NUMBER = 20;
    public static final int TURNOVERRATIO_FIELD_NUMBER = 21;
    public static final int BARTIME_FIELD_NUMBER = 22;
    public static final int MARKET_FIELD_NUMBER = 23;
    public static final int SUMTOENDBUSINESSAMOUNT_FIELD_NUMBER = 24;
    public static final int SUMTOENDBUSINESSBALANCE_FIELD_NUMBER = 25;
    public static final int LASTCLOSE_FIELD_NUMBER = 26;
    public static final int PERIODTIME_FIELD_NUMBER = 27;
    public static final int UPDATETIME_FIELD_NUMBER = 28;
    public static final int RANGEPCT_FIELD_NUMBER = 29;
    public static final int RANGEOFPRICE_FIELD_NUMBER = 30;
    public static final int ACCUHIGHPRICE_FIELD_NUMBER = 31;
    public static final int ACCULOWPRICE_FIELD_NUMBER = 32;
    public static final int ACCUBARGAINAMOUNT_FIELD_NUMBER = 33;
    public static final int ACCUBARGAINSUM_FIELD_NUMBER = 34;
    public static final int CHANGEOI_FIELD_NUMBER = 35;
    public static final int AVG_FIELD_NUMBER = 36;
    public static final int TRADEPERIODNUMS_FIELD_NUMBER = 37;
    public static final int TRADINGDATE_FIELD_NUMBER = 38;
    private static final long serialVersionUID = 0L;
    // @@protoc_insertion_point(class_scope:KLineCache)
    private static final com.pancm.protobuf.KLine.KLineCache DEFAULT_INSTANCE;
    private static final com.google.protobuf.Parser<KLineCache>
        PARSER = new com.google.protobuf.AbstractParser<KLineCache>() {
      public KLineCache parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KLineCache(input, extensionRegistry);
      }
    };

    static {
      DEFAULT_INSTANCE = new com.pancm.protobuf.KLine.KLineCache();
    }

    private volatile Object name_;
    private volatile Object code_;
    private int period_;
    private int date_;
    private int time_;
    private int startDate_;
    private int startMin_;
    private long open_;
    private long high_;
    private long low_;
    private long close_;
    private long closeChange_;
    private long closeChangeRate_;
    private long settlement_;
    private long amount_;
    private long amountChange_;
    private long businessAmount_;
    private long businessAmountChange_;
    private long businessBalance_;
    private long turnoverRatio_;
    private long barTime_;
    private volatile Object market_;
    private long sumToEndBusinessAmount_;
    private long sumToEndBusinessBalance_;
    private long lastClose_;
    private long periodTime_;
    private long updateTime_;
    private float rangePCT_;
    private float rangeOfPrice_;
    private long accuHighPrice_;
    private long accuLowPrice_;
    private long accuBargainAmount_;
    private long accuBargainSum_;
    private long changeOI_;
    private long avg_;
    private int tradePeriodNums_;
    private int tradingDate_;
    private byte memoizedIsInitialized = -1;
    // Use KLineCache.newBuilder() to construct.
    private KLineCache(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private KLineCache() {
      name_ = "";
      code_ = "";
      period_ = 0;
      date_ = 0;
      time_ = 0;
      startDate_ = 0;
      startMin_ = 0;
      open_ = 0L;
      high_ = 0L;
      low_ = 0L;
      close_ = 0L;
      closeChange_ = 0L;
      closeChangeRate_ = 0L;
      settlement_ = 0L;
      amount_ = 0L;
      amountChange_ = 0L;
      businessAmount_ = 0L;
      businessAmountChange_ = 0L;
      businessBalance_ = 0L;
      turnoverRatio_ = 0L;
      barTime_ = 0L;
      market_ = "";
      sumToEndBusinessAmount_ = 0L;
      sumToEndBusinessBalance_ = 0L;
      lastClose_ = 0L;
      periodTime_ = 0L;
      updateTime_ = 0L;
      rangePCT_ = 0F;
      rangeOfPrice_ = 0F;
      accuHighPrice_ = 0L;
      accuLowPrice_ = 0L;
      accuBargainAmount_ = 0L;
      accuBargainSum_ = 0L;
      changeOI_ = 0L;
      avg_ = 0L;
      tradePeriodNums_ = 0;
      tradingDate_ = 0;
    }

    private KLineCache(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              String s = input.readStringRequireUtf8();

              code_ = s;
              break;
            }
            case 32: {

              period_ = input.readInt32();
              break;
            }
            case 40: {

              date_ = input.readInt32();
              break;
            }
            case 48: {

              time_ = input.readInt32();
              break;
            }
            case 56: {

              startDate_ = input.readInt32();
              break;
            }
            case 64: {

              startMin_ = input.readInt32();
              break;
            }
            case 72: {

              open_ = input.readInt64();
              break;
            }
            case 80: {

              high_ = input.readInt64();
              break;
            }
            case 88: {

              low_ = input.readInt64();
              break;
            }
            case 96: {

              close_ = input.readInt64();
              break;
            }
            case 104: {

              closeChange_ = input.readInt64();
              break;
            }
            case 112: {

              closeChangeRate_ = input.readInt64();
              break;
            }
            case 120: {

              settlement_ = input.readInt64();
              break;
            }
            case 128: {

              amount_ = input.readInt64();
              break;
            }
            case 136: {

              amountChange_ = input.readInt64();
              break;
            }
            case 144: {

              businessAmount_ = input.readInt64();
              break;
            }
            case 152: {

              businessAmountChange_ = input.readInt64();
              break;
            }
            case 160: {

              businessBalance_ = input.readInt64();
              break;
            }
            case 168: {

              turnoverRatio_ = input.readInt64();
              break;
            }
            case 176: {

              barTime_ = input.readInt64();
              break;
            }
            case 186: {
              String s = input.readStringRequireUtf8();

              market_ = s;
              break;
            }
            case 192: {

              sumToEndBusinessAmount_ = input.readInt64();
              break;
            }
            case 200: {

              sumToEndBusinessBalance_ = input.readInt64();
              break;
            }
            case 208: {

              lastClose_ = input.readInt64();
              break;
            }
            case 216: {

              periodTime_ = input.readInt64();
              break;
            }
            case 224: {

              updateTime_ = input.readInt64();
              break;
            }
            case 237: {

              rangePCT_ = input.readFloat();
              break;
            }
            case 245: {

              rangeOfPrice_ = input.readFloat();
              break;
            }
            case 248: {

              accuHighPrice_ = input.readInt64();
              break;
            }
            case 256: {

              accuLowPrice_ = input.readInt64();
              break;
            }
            case 264: {

              accuBargainAmount_ = input.readInt64();
              break;
            }
            case 272: {

              accuBargainSum_ = input.readInt64();
              break;
            }
            case 280: {

              changeOI_ = input.readInt64();
              break;
            }
            case 288: {

              avg_ = input.readInt64();
              break;
            }
            case 296: {

              tradePeriodNums_ = input.readInt32();
              break;
            }
            case 304: {

              tradingDate_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.pancm.protobuf.KLine.internal_static_KLineCache_descriptor;
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }

    public static com.pancm.protobuf.KLine.KLineCache parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(com.pancm.protobuf.KLine.KLineCache prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    public static com.pancm.protobuf.KLine.KLineCache getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    public static com.google.protobuf.Parser<KLineCache> parser() {
      return PARSER;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }

    protected FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.pancm.protobuf.KLine.internal_static_KLineCache_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancm.protobuf.KLine.KLineCache.class, com.pancm.protobuf.KLine.KLineCache.Builder.class);
    }

    /**
     * <pre>
     *    string id = 1;
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }

    /**
     * <pre>
     *    string id = 1;
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
    getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <pre>
     * 证券代码
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    public String getCode() {
      Object ref = code_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        code_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * 证券代码
     * </pre>
     *
     * <code>string code = 3;</code>
     */
    public com.google.protobuf.ByteString
    getCodeBytes() {
      Object ref = code_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <pre>
     * 周期类型
     * </pre>
     *
     * <code>int32 period = 4;</code>
     */
    public int getPeriod() {
      return period_;
    }

    /**
     * <pre>
     * 起始日期
     * </pre>
     *
     * <code>int32 date = 5;</code>
     */
    public int getDate() {
      return date_;
    }

    /**
     * <code>int32 time = 6;</code>
     */
    public int getTime() {
      return time_;
    }

    /**
     * <pre>
     * 开始日期
     * </pre>
     *
     * <code>int32 startDate = 7;</code>
     */
    public int getStartDate() {
      return startDate_;
    }

    /**
     * <pre>
     * 开始分钟
     * </pre>
     *
     * <code>int32 startMin = 8;</code>
     */
    public int getStartMin() {
      return startMin_;
    }

    /**
     * <pre>
     * 开盘价
     * </pre>
     *
     * <code>int64 open = 9;</code>
     */
    public long getOpen() {
      return open_;
    }

    /**
     * <pre>
     * 最高价
     * </pre>
     *
     * <code>int64 high = 10;</code>
     */
    public long getHigh() {
      return high_;
    }

    /**
     * <pre>
     * 最低价
     * </pre>
     *
     * <code>int64 low = 11;</code>
     */
    public long getLow() {
      return low_;
    }

    /**
     * <pre>
     * 收盘价
     * </pre>
     *
     * <code>int64 close = 12;</code>
     */
    public long getClose() {
      return close_;
    }

    /**
     * <pre>
     * 收盘涨跌
     * </pre>
     *
     * <code>int64 closeChange = 13;</code>
     */
    public long getCloseChange() {
      return closeChange_;
    }

    /**
     * <pre>
     * 收盘涨跌幅
     * </pre>
     *
     * <code>int64 closeChangeRate = 14;</code>
     */
    public long getCloseChangeRate() {
      return closeChangeRate_;
    }

    /**
     * <pre>
     * 结算价
     * </pre>
     *
     * <code>int64 settlement = 15;</code>
     */
    public long getSettlement() {
      return settlement_;
    }

    /**
     * <pre>
     * 持仓量
     * </pre>
     *
     * <code>int64 amount = 16;</code>
     */
    public long getAmount() {
      return amount_;
    }

    /**
     * <pre>
     * 持仓量涨跌
     * </pre>
     *
     * <code>int64 amountChange = 17;</code>
     */
    public long getAmountChange() {
      return amountChange_;
    }

    /**
     * <pre>
     * 成交量(总手)
     * </pre>
     *
     * <code>int64 businessAmount = 18;</code>
     */
    public long getBusinessAmount() {
      return businessAmount_;
    }

    /**
     * <pre>
     * 成交涨跌
     * </pre>
     *
     * <code>int64 businessAmountChange = 19;</code>
     */
    public long getBusinessAmountChange() {
      return businessAmountChange_;
    }

    /**
     * <pre>
     * 成交额
     * </pre>
     *
     * <code>int64 businessBalance = 20;</code>
     */
    public long getBusinessBalance() {
      return businessBalance_;
    }

    /**
     * <pre>
     * 换手率
     * </pre>
     *
     * <code>int64 turnoverRatio = 21;</code>
     */
    public long getTurnoverRatio() {
      return turnoverRatio_;
    }

    /**
     * <pre>
     * barTime
     * </pre>
     *
     * <code>int64 barTime = 22;</code>
     */
    public long getBarTime() {
      return barTime_;
    }

    /**
     * <pre>
     * barTime
     * </pre>
     *
     * <code>string market = 23;</code>
     */
    public String getMarket() {
      Object ref = market_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        market_ = s;
        return s;
      }
    }

    /**
     * <pre>
     * barTime
     * </pre>
     *
     * <code>string market = 23;</code>
     */
    public com.google.protobuf.ByteString
    getMarketBytes() {
      Object ref = market_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        market_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    /**
     * <pre>
     * 截止当前bar结束的成交量，计算成交量用
     * </pre>
     *
     * <code>int64 sumToEndBusinessAmount = 24;</code>
     */
    public long getSumToEndBusinessAmount() {
      return sumToEndBusinessAmount_;
    }

    /**
     * <pre>
     * 截止当前bar结束的成交额，计算成交额用
     * </pre>
     *
     * <code>int64 sumToEndBusinessBalance = 25;</code>
     */
    public long getSumToEndBusinessBalance() {
      return sumToEndBusinessBalance_;
    }

    /**
     * <pre>
     * 上根bar的close;
     * </pre>
     *
     * <code>int64 lastClose = 26;</code>
     */
    public long getLastClose() {
      return lastClose_;
    }

    /**
     * <pre>
     * 年k periodTime=yyyy  月k periodTime=yyyyMM 周K periodTime=yyyyMMww
     * </pre>
     *
     * <code>int64 periodTime = 27;</code>
     */
    public long getPeriodTime() {
      return periodTime_;
    }

    /**
     * <pre>
     * 最新bar的修改时间.
     * </pre>
     *
     * <code>int64 updateTime = 28;</code>
     */
    public long getUpdateTime() {
      return updateTime_;
    }

    /**
     * <pre>
     * 2017-11-2 add property
     * </pre>
     *
     * <code>float rangePCT = 29;</code>
     */
    public float getRangePCT() {
      return rangePCT_;
    }

    /**
     * <pre>
     * 区间绝对振幅
     * </pre>
     *
     * <code>float rangeOfPrice = 30;</code>
     */
    public float getRangeOfPrice() {
      return rangeOfPrice_;
    }

    /**
     * <pre>
     * 至今最高价
     * </pre>
     *
     * <code>int64 accuHighPrice = 31;</code>
     */
    public long getAccuHighPrice() {
      return accuHighPrice_;
    }

    /**
     * <pre>
     * 至今最低价
     * </pre>
     *
     * <code>int64 accuLowPrice = 32;</code>
     */
    public long getAccuLowPrice() {
      return accuLowPrice_;
    }

    /**
     * <pre>
     * 至今成交量
     * </pre>
     *
     * <code>int64 accuBargainAmount = 33;</code>
     */
    public long getAccuBargainAmount() {
      return accuBargainAmount_;
    }

    /**
     * <pre>
     * 至今成交额
     * </pre>
     *
     * <code>int64 accuBargainSum = 34;</code>
     */
    public long getAccuBargainSum() {
      return accuBargainSum_;
    }

    /**
     * <pre>
     * 价格变化
     * </pre>
     *
     * <code>int64 changeOI = 35;</code>
     */
    public long getChangeOI() {
      return changeOI_;
    }

    /**
     * <pre>
     * 区间均价
     * </pre>
     *
     * <code>int64 avg = 36;</code>
     */
    public long getAvg() {
      return avg_;
    }

    /**
     * <pre>
     * 交易周期数
     * </pre>
     *
     * <code>int32 tradePeriodNums = 37;</code>
     */
    public int getTradePeriodNums() {
      return tradePeriodNums_;
    }

    /**
     * <pre>
     * 交易日
     * </pre>
     *
     * <code>int32 tradingDate = 38;</code>
     */
    public int getTradingDate() {
      return tradingDate_;
    }

    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (!getCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, code_);
      }
      if (period_ != 0) {
        output.writeInt32(4, period_);
      }
      if (date_ != 0) {
        output.writeInt32(5, date_);
      }
      if (time_ != 0) {
        output.writeInt32(6, time_);
      }
      if (startDate_ != 0) {
        output.writeInt32(7, startDate_);
      }
      if (startMin_ != 0) {
        output.writeInt32(8, startMin_);
      }
      if (open_ != 0L) {
        output.writeInt64(9, open_);
      }
      if (high_ != 0L) {
        output.writeInt64(10, high_);
      }
      if (low_ != 0L) {
        output.writeInt64(11, low_);
      }
      if (close_ != 0L) {
        output.writeInt64(12, close_);
      }
      if (closeChange_ != 0L) {
        output.writeInt64(13, closeChange_);
      }
      if (closeChangeRate_ != 0L) {
        output.writeInt64(14, closeChangeRate_);
      }
      if (settlement_ != 0L) {
        output.writeInt64(15, settlement_);
      }
      if (amount_ != 0L) {
        output.writeInt64(16, amount_);
      }
      if (amountChange_ != 0L) {
        output.writeInt64(17, amountChange_);
      }
      if (businessAmount_ != 0L) {
        output.writeInt64(18, businessAmount_);
      }
      if (businessAmountChange_ != 0L) {
        output.writeInt64(19, businessAmountChange_);
      }
      if (businessBalance_ != 0L) {
        output.writeInt64(20, businessBalance_);
      }
      if (turnoverRatio_ != 0L) {
        output.writeInt64(21, turnoverRatio_);
      }
      if (barTime_ != 0L) {
        output.writeInt64(22, barTime_);
      }
      if (!getMarketBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 23, market_);
      }
      if (sumToEndBusinessAmount_ != 0L) {
        output.writeInt64(24, sumToEndBusinessAmount_);
      }
      if (sumToEndBusinessBalance_ != 0L) {
        output.writeInt64(25, sumToEndBusinessBalance_);
      }
      if (lastClose_ != 0L) {
        output.writeInt64(26, lastClose_);
      }
      if (periodTime_ != 0L) {
        output.writeInt64(27, periodTime_);
      }
      if (updateTime_ != 0L) {
        output.writeInt64(28, updateTime_);
      }
      if (rangePCT_ != 0F) {
        output.writeFloat(29, rangePCT_);
      }
      if (rangeOfPrice_ != 0F) {
        output.writeFloat(30, rangeOfPrice_);
      }
      if (accuHighPrice_ != 0L) {
        output.writeInt64(31, accuHighPrice_);
      }
      if (accuLowPrice_ != 0L) {
        output.writeInt64(32, accuLowPrice_);
      }
      if (accuBargainAmount_ != 0L) {
        output.writeInt64(33, accuBargainAmount_);
      }
      if (accuBargainSum_ != 0L) {
        output.writeInt64(34, accuBargainSum_);
      }
      if (changeOI_ != 0L) {
        output.writeInt64(35, changeOI_);
      }
      if (avg_ != 0L) {
        output.writeInt64(36, avg_);
      }
      if (tradePeriodNums_ != 0) {
        output.writeInt32(37, tradePeriodNums_);
      }
      if (tradingDate_ != 0) {
        output.writeInt32(38, tradingDate_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (!getCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, code_);
      }
      if (period_ != 0) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, period_);
      }
      if (date_ != 0) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, date_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, time_);
      }
      if (startDate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, startDate_);
      }
      if (startMin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, startMin_);
      }
      if (open_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(9, open_);
      }
      if (high_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(10, high_);
      }
      if (low_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(11, low_);
      }
      if (close_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(12, close_);
      }
      if (closeChange_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(13, closeChange_);
      }
      if (closeChangeRate_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(14, closeChangeRate_);
      }
      if (settlement_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(15, settlement_);
      }
      if (amount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(16, amount_);
      }
      if (amountChange_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(17, amountChange_);
      }
      if (businessAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(18, businessAmount_);
      }
      if (businessAmountChange_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(19, businessAmountChange_);
      }
      if (businessBalance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(20, businessBalance_);
      }
      if (turnoverRatio_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(21, turnoverRatio_);
      }
      if (barTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(22, barTime_);
      }
      if (!getMarketBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, market_);
      }
      if (sumToEndBusinessAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(24, sumToEndBusinessAmount_);
      }
      if (sumToEndBusinessBalance_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(25, sumToEndBusinessBalance_);
      }
      if (lastClose_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(26, lastClose_);
      }
      if (periodTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(27, periodTime_);
      }
      if (updateTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(28, updateTime_);
      }
      if (rangePCT_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(29, rangePCT_);
      }
      if (rangeOfPrice_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(30, rangeOfPrice_);
      }
      if (accuHighPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(31, accuHighPrice_);
      }
      if (accuLowPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(32, accuLowPrice_);
      }
      if (accuBargainAmount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(33, accuBargainAmount_);
      }
      if (accuBargainSum_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(34, accuBargainSum_);
      }
      if (changeOI_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(35, changeOI_);
      }
      if (avg_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(36, avg_);
      }
      if (tradePeriodNums_ != 0) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(37, tradePeriodNums_);
      }
      if (tradingDate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(38, tradingDate_);
      }
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.pancm.protobuf.KLine.KLineCache)) {
        return super.equals(obj);
      }
      com.pancm.protobuf.KLine.KLineCache other = (com.pancm.protobuf.KLine.KLineCache) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getCode()
          .equals(other.getCode());
      result = result && (getPeriod()
          == other.getPeriod());
      result = result && (getDate()
          == other.getDate());
      result = result && (getTime()
          == other.getTime());
      result = result && (getStartDate()
          == other.getStartDate());
      result = result && (getStartMin()
          == other.getStartMin());
      result = result && (getOpen()
          == other.getOpen());
      result = result && (getHigh()
          == other.getHigh());
      result = result && (getLow()
          == other.getLow());
      result = result && (getClose()
          == other.getClose());
      result = result && (getCloseChange()
          == other.getCloseChange());
      result = result && (getCloseChangeRate()
          == other.getCloseChangeRate());
      result = result && (getSettlement()
          == other.getSettlement());
      result = result && (getAmount()
          == other.getAmount());
      result = result && (getAmountChange()
          == other.getAmountChange());
      result = result && (getBusinessAmount()
          == other.getBusinessAmount());
      result = result && (getBusinessAmountChange()
          == other.getBusinessAmountChange());
      result = result && (getBusinessBalance()
          == other.getBusinessBalance());
      result = result && (getTurnoverRatio()
          == other.getTurnoverRatio());
      result = result && (getBarTime()
          == other.getBarTime());
      result = result && getMarket()
          .equals(other.getMarket());
      result = result && (getSumToEndBusinessAmount()
          == other.getSumToEndBusinessAmount());
      result = result && (getSumToEndBusinessBalance()
          == other.getSumToEndBusinessBalance());
      result = result && (getLastClose()
          == other.getLastClose());
      result = result && (getPeriodTime()
          == other.getPeriodTime());
      result = result && (getUpdateTime()
          == other.getUpdateTime());
      result = result && (
          Float.floatToIntBits(getRangePCT())
              == Float.floatToIntBits(
              other.getRangePCT()));
      result = result && (
          Float.floatToIntBits(getRangeOfPrice())
              == Float.floatToIntBits(
              other.getRangeOfPrice()));
      result = result && (getAccuHighPrice()
          == other.getAccuHighPrice());
      result = result && (getAccuLowPrice()
          == other.getAccuLowPrice());
      result = result && (getAccuBargainAmount()
          == other.getAccuBargainAmount());
      result = result && (getAccuBargainSum()
          == other.getAccuBargainSum());
      result = result && (getChangeOI()
          == other.getChangeOI());
      result = result && (getAvg()
          == other.getAvg());
      result = result && (getTradePeriodNums()
          == other.getTradePeriodNums());
      result = result && (getTradingDate()
          == other.getTradingDate());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode().hashCode();
      hash = (37 * hash) + PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getPeriod();
      hash = (37 * hash) + DATE_FIELD_NUMBER;
      hash = (53 * hash) + getDate();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + STARTDATE_FIELD_NUMBER;
      hash = (53 * hash) + getStartDate();
      hash = (37 * hash) + STARTMIN_FIELD_NUMBER;
      hash = (53 * hash) + getStartMin();
      hash = (37 * hash) + OPEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOpen());
      hash = (37 * hash) + HIGH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHigh());
      hash = (37 * hash) + LOW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLow());
      hash = (37 * hash) + CLOSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getClose());
      hash = (37 * hash) + CLOSECHANGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCloseChange());
      hash = (37 * hash) + CLOSECHANGERATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCloseChangeRate());
      hash = (37 * hash) + SETTLEMENT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSettlement());
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmount());
      hash = (37 * hash) + AMOUNTCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAmountChange());
      hash = (37 * hash) + BUSINESSAMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBusinessAmount());
      hash = (37 * hash) + BUSINESSAMOUNTCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBusinessAmountChange());
      hash = (37 * hash) + BUSINESSBALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBusinessBalance());
      hash = (37 * hash) + TURNOVERRATIO_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTurnoverRatio());
      hash = (37 * hash) + BARTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBarTime());
      hash = (37 * hash) + MARKET_FIELD_NUMBER;
      hash = (53 * hash) + getMarket().hashCode();
      hash = (37 * hash) + SUMTOENDBUSINESSAMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSumToEndBusinessAmount());
      hash = (37 * hash) + SUMTOENDBUSINESSBALANCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSumToEndBusinessBalance());
      hash = (37 * hash) + LASTCLOSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastClose());
      hash = (37 * hash) + PERIODTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPeriodTime());
      hash = (37 * hash) + UPDATETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUpdateTime());
      hash = (37 * hash) + RANGEPCT_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getRangePCT());
      hash = (37 * hash) + RANGEOFPRICE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getRangeOfPrice());
      hash = (37 * hash) + ACCUHIGHPRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAccuHighPrice());
      hash = (37 * hash) + ACCULOWPRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAccuLowPrice());
      hash = (37 * hash) + ACCUBARGAINAMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAccuBargainAmount());
      hash = (37 * hash) + ACCUBARGAINSUM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAccuBargainSum());
      hash = (37 * hash) + CHANGEOI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getChangeOI());
      hash = (37 * hash) + AVG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAvg());
      hash = (37 * hash) + TRADEPERIODNUMS_FIELD_NUMBER;
      hash = (53 * hash) + getTradePeriodNums();
      hash = (37 * hash) + TRADINGDATE_FIELD_NUMBER;
      hash = (53 * hash) + getTradingDate();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }

    @Override
    public com.google.protobuf.Parser<KLineCache> getParserForType() {
      return PARSER;
    }

    public com.pancm.protobuf.KLine.KLineCache getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

    /**
     * <pre>
     * TODO 使用proto定义的规则,生成java类以及PO类以及EPL的event
     * </pre>
     *
     * Protobuf type {@code KLineCache}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KLineCache)
        com.pancm.protobuf.KLine.KLineCacheOrBuilder {
      private Object name_ = "";
      private Object code_ = "";
      private int period_;
      private int date_;
      private int time_;
      private int startDate_;
      private int startMin_;
      private long open_;
      private long high_;
      private long low_;
      private long close_;
      private long closeChange_;
      private long closeChangeRate_;
      private long settlement_;
      private long amount_;
      private long amountChange_;
      private long businessAmount_;
      private long businessAmountChange_;
      private long businessBalance_;
      private long turnoverRatio_;
      private long barTime_;
      private Object market_ = "";
      private long sumToEndBusinessAmount_;
      private long sumToEndBusinessBalance_;
      private long lastClose_;
      private long periodTime_;
      private long updateTime_;
      private float rangePCT_;
      private float rangeOfPrice_;
      private long accuHighPrice_;
      private long accuLowPrice_;
      private long accuBargainAmount_;
      private long accuBargainSum_;
      private long changeOI_;
      private long avg_;
      private int tradePeriodNums_;
      private int tradingDate_;

      // Construct using com.pancm.protobuf.KLine.KLineCache.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.pancm.protobuf.KLine.internal_static_KLineCache_descriptor;
      }

      protected FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.pancm.protobuf.KLine.internal_static_KLineCache_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancm.protobuf.KLine.KLineCache.class, com.pancm.protobuf.KLine.KLineCache.Builder.class);
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
            .alwaysUseFieldBuilders) {
        }
      }

      public Builder clear() {
        super.clear();
        name_ = "";

        code_ = "";

        period_ = 0;

        date_ = 0;

        time_ = 0;

        startDate_ = 0;

        startMin_ = 0;

        open_ = 0L;

        high_ = 0L;

        low_ = 0L;

        close_ = 0L;

        closeChange_ = 0L;

        closeChangeRate_ = 0L;

        settlement_ = 0L;

        amount_ = 0L;

        amountChange_ = 0L;

        businessAmount_ = 0L;

        businessAmountChange_ = 0L;

        businessBalance_ = 0L;

        turnoverRatio_ = 0L;

        barTime_ = 0L;

        market_ = "";

        sumToEndBusinessAmount_ = 0L;

        sumToEndBusinessBalance_ = 0L;

        lastClose_ = 0L;

        periodTime_ = 0L;

        updateTime_ = 0L;

        rangePCT_ = 0F;

        rangeOfPrice_ = 0F;

        accuHighPrice_ = 0L;

        accuLowPrice_ = 0L;

        accuBargainAmount_ = 0L;

        accuBargainSum_ = 0L;

        changeOI_ = 0L;

        avg_ = 0L;

        tradePeriodNums_ = 0;

        tradingDate_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.pancm.protobuf.KLine.internal_static_KLineCache_descriptor;
      }

      public com.pancm.protobuf.KLine.KLineCache getDefaultInstanceForType() {
        return com.pancm.protobuf.KLine.KLineCache.getDefaultInstance();
      }

      public com.pancm.protobuf.KLine.KLineCache build() {
        com.pancm.protobuf.KLine.KLineCache result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.pancm.protobuf.KLine.KLineCache buildPartial() {
        com.pancm.protobuf.KLine.KLineCache result = new com.pancm.protobuf.KLine.KLineCache(this);
        result.name_ = name_;
        result.code_ = code_;
        result.period_ = period_;
        result.date_ = date_;
        result.time_ = time_;
        result.startDate_ = startDate_;
        result.startMin_ = startMin_;
        result.open_ = open_;
        result.high_ = high_;
        result.low_ = low_;
        result.close_ = close_;
        result.closeChange_ = closeChange_;
        result.closeChangeRate_ = closeChangeRate_;
        result.settlement_ = settlement_;
        result.amount_ = amount_;
        result.amountChange_ = amountChange_;
        result.businessAmount_ = businessAmount_;
        result.businessAmountChange_ = businessAmountChange_;
        result.businessBalance_ = businessBalance_;
        result.turnoverRatio_ = turnoverRatio_;
        result.barTime_ = barTime_;
        result.market_ = market_;
        result.sumToEndBusinessAmount_ = sumToEndBusinessAmount_;
        result.sumToEndBusinessBalance_ = sumToEndBusinessBalance_;
        result.lastClose_ = lastClose_;
        result.periodTime_ = periodTime_;
        result.updateTime_ = updateTime_;
        result.rangePCT_ = rangePCT_;
        result.rangeOfPrice_ = rangeOfPrice_;
        result.accuHighPrice_ = accuHighPrice_;
        result.accuLowPrice_ = accuLowPrice_;
        result.accuBargainAmount_ = accuBargainAmount_;
        result.accuBargainSum_ = accuBargainSum_;
        result.changeOI_ = changeOI_;
        result.avg_ = avg_;
        result.tradePeriodNums_ = tradePeriodNums_;
        result.tradingDate_ = tradingDate_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }

      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }

      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }

      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }

      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }

      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancm.protobuf.KLine.KLineCache) {
          return mergeFrom((com.pancm.protobuf.KLine.KLineCache) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancm.protobuf.KLine.KLineCache other) {
        if (other == com.pancm.protobuf.KLine.KLineCache.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getCode().isEmpty()) {
          code_ = other.code_;
          onChanged();
        }
        if (other.getPeriod() != 0) {
          setPeriod(other.getPeriod());
        }
        if (other.getDate() != 0) {
          setDate(other.getDate());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getStartDate() != 0) {
          setStartDate(other.getStartDate());
        }
        if (other.getStartMin() != 0) {
          setStartMin(other.getStartMin());
        }
        if (other.getOpen() != 0L) {
          setOpen(other.getOpen());
        }
        if (other.getHigh() != 0L) {
          setHigh(other.getHigh());
        }
        if (other.getLow() != 0L) {
          setLow(other.getLow());
        }
        if (other.getClose() != 0L) {
          setClose(other.getClose());
        }
        if (other.getCloseChange() != 0L) {
          setCloseChange(other.getCloseChange());
        }
        if (other.getCloseChangeRate() != 0L) {
          setCloseChangeRate(other.getCloseChangeRate());
        }
        if (other.getSettlement() != 0L) {
          setSettlement(other.getSettlement());
        }
        if (other.getAmount() != 0L) {
          setAmount(other.getAmount());
        }
        if (other.getAmountChange() != 0L) {
          setAmountChange(other.getAmountChange());
        }
        if (other.getBusinessAmount() != 0L) {
          setBusinessAmount(other.getBusinessAmount());
        }
        if (other.getBusinessAmountChange() != 0L) {
          setBusinessAmountChange(other.getBusinessAmountChange());
        }
        if (other.getBusinessBalance() != 0L) {
          setBusinessBalance(other.getBusinessBalance());
        }
        if (other.getTurnoverRatio() != 0L) {
          setTurnoverRatio(other.getTurnoverRatio());
        }
        if (other.getBarTime() != 0L) {
          setBarTime(other.getBarTime());
        }
        if (!other.getMarket().isEmpty()) {
          market_ = other.market_;
          onChanged();
        }
        if (other.getSumToEndBusinessAmount() != 0L) {
          setSumToEndBusinessAmount(other.getSumToEndBusinessAmount());
        }
        if (other.getSumToEndBusinessBalance() != 0L) {
          setSumToEndBusinessBalance(other.getSumToEndBusinessBalance());
        }
        if (other.getLastClose() != 0L) {
          setLastClose(other.getLastClose());
        }
        if (other.getPeriodTime() != 0L) {
          setPeriodTime(other.getPeriodTime());
        }
        if (other.getUpdateTime() != 0L) {
          setUpdateTime(other.getUpdateTime());
        }
        if (other.getRangePCT() != 0F) {
          setRangePCT(other.getRangePCT());
        }
        if (other.getRangeOfPrice() != 0F) {
          setRangeOfPrice(other.getRangeOfPrice());
        }
        if (other.getAccuHighPrice() != 0L) {
          setAccuHighPrice(other.getAccuHighPrice());
        }
        if (other.getAccuLowPrice() != 0L) {
          setAccuLowPrice(other.getAccuLowPrice());
        }
        if (other.getAccuBargainAmount() != 0L) {
          setAccuBargainAmount(other.getAccuBargainAmount());
        }
        if (other.getAccuBargainSum() != 0L) {
          setAccuBargainSum(other.getAccuBargainSum());
        }
        if (other.getChangeOI() != 0L) {
          setChangeOI(other.getChangeOI());
        }
        if (other.getAvg() != 0L) {
          setAvg(other.getAvg());
        }
        if (other.getTradePeriodNums() != 0) {
          setTradePeriodNums(other.getTradePeriodNums());
        }
        if (other.getTradingDate() != 0) {
          setTradingDate(other.getTradingDate());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancm.protobuf.KLine.KLineCache parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancm.protobuf.KLine.KLineCache) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      /**
       * <pre>
       *    string id = 1;
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <pre>
       *    string id = 1;
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        name_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       *    string id = 1;
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
      getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <pre>
       *    string id = 1;
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        name_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       *    string id = 1;
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {

        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public String getCode() {
        Object ref = code_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          code_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public Builder setCode(
          String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        code_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public com.google.protobuf.ByteString
      getCodeBytes() {
        Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        code_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 证券代码
       * </pre>
       *
       * <code>string code = 3;</code>
       */
      public Builder clearCode() {

        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 周期类型
       * </pre>
       *
       * <code>int32 period = 4;</code>
       */
      public int getPeriod() {
        return period_;
      }

      /**
       * <pre>
       * 周期类型
       * </pre>
       *
       * <code>int32 period = 4;</code>
       */
      public Builder setPeriod(int value) {

        period_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 周期类型
       * </pre>
       *
       * <code>int32 period = 4;</code>
       */
      public Builder clearPeriod() {

        period_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 起始日期
       * </pre>
       *
       * <code>int32 date = 5;</code>
       */
      public int getDate() {
        return date_;
      }

      /**
       * <pre>
       * 起始日期
       * </pre>
       *
       * <code>int32 date = 5;</code>
       */
      public Builder setDate(int value) {

        date_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 起始日期
       * </pre>
       *
       * <code>int32 date = 5;</code>
       */
      public Builder clearDate() {

        date_ = 0;
        onChanged();
        return this;
      }

      /**
       * <code>int32 time = 6;</code>
       */
      public int getTime() {
        return time_;
      }

      /**
       * <code>int32 time = 6;</code>
       */
      public Builder setTime(int value) {

        time_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>int32 time = 6;</code>
       */
      public Builder clearTime() {

        time_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 开始日期
       * </pre>
       *
       * <code>int32 startDate = 7;</code>
       */
      public int getStartDate() {
        return startDate_;
      }

      /**
       * <pre>
       * 开始日期
       * </pre>
       *
       * <code>int32 startDate = 7;</code>
       */
      public Builder setStartDate(int value) {

        startDate_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 开始日期
       * </pre>
       *
       * <code>int32 startDate = 7;</code>
       */
      public Builder clearStartDate() {

        startDate_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 开始分钟
       * </pre>
       *
       * <code>int32 startMin = 8;</code>
       */
      public int getStartMin() {
        return startMin_;
      }

      /**
       * <pre>
       * 开始分钟
       * </pre>
       *
       * <code>int32 startMin = 8;</code>
       */
      public Builder setStartMin(int value) {

        startMin_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 开始分钟
       * </pre>
       *
       * <code>int32 startMin = 8;</code>
       */
      public Builder clearStartMin() {

        startMin_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 开盘价
       * </pre>
       *
       * <code>int64 open = 9;</code>
       */
      public long getOpen() {
        return open_;
      }

      /**
       * <pre>
       * 开盘价
       * </pre>
       *
       * <code>int64 open = 9;</code>
       */
      public Builder setOpen(long value) {

        open_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 开盘价
       * </pre>
       *
       * <code>int64 open = 9;</code>
       */
      public Builder clearOpen() {

        open_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 最高价
       * </pre>
       *
       * <code>int64 high = 10;</code>
       */
      public long getHigh() {
        return high_;
      }

      /**
       * <pre>
       * 最高价
       * </pre>
       *
       * <code>int64 high = 10;</code>
       */
      public Builder setHigh(long value) {

        high_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 最高价
       * </pre>
       *
       * <code>int64 high = 10;</code>
       */
      public Builder clearHigh() {

        high_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 最低价
       * </pre>
       *
       * <code>int64 low = 11;</code>
       */
      public long getLow() {
        return low_;
      }

      /**
       * <pre>
       * 最低价
       * </pre>
       *
       * <code>int64 low = 11;</code>
       */
      public Builder setLow(long value) {

        low_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 最低价
       * </pre>
       *
       * <code>int64 low = 11;</code>
       */
      public Builder clearLow() {

        low_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 收盘价
       * </pre>
       *
       * <code>int64 close = 12;</code>
       */
      public long getClose() {
        return close_;
      }

      /**
       * <pre>
       * 收盘价
       * </pre>
       *
       * <code>int64 close = 12;</code>
       */
      public Builder setClose(long value) {

        close_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 收盘价
       * </pre>
       *
       * <code>int64 close = 12;</code>
       */
      public Builder clearClose() {

        close_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 收盘涨跌
       * </pre>
       *
       * <code>int64 closeChange = 13;</code>
       */
      public long getCloseChange() {
        return closeChange_;
      }

      /**
       * <pre>
       * 收盘涨跌
       * </pre>
       *
       * <code>int64 closeChange = 13;</code>
       */
      public Builder setCloseChange(long value) {

        closeChange_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 收盘涨跌
       * </pre>
       *
       * <code>int64 closeChange = 13;</code>
       */
      public Builder clearCloseChange() {

        closeChange_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 收盘涨跌幅
       * </pre>
       *
       * <code>int64 closeChangeRate = 14;</code>
       */
      public long getCloseChangeRate() {
        return closeChangeRate_;
      }

      /**
       * <pre>
       * 收盘涨跌幅
       * </pre>
       *
       * <code>int64 closeChangeRate = 14;</code>
       */
      public Builder setCloseChangeRate(long value) {

        closeChangeRate_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 收盘涨跌幅
       * </pre>
       *
       * <code>int64 closeChangeRate = 14;</code>
       */
      public Builder clearCloseChangeRate() {

        closeChangeRate_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 结算价
       * </pre>
       *
       * <code>int64 settlement = 15;</code>
       */
      public long getSettlement() {
        return settlement_;
      }

      /**
       * <pre>
       * 结算价
       * </pre>
       *
       * <code>int64 settlement = 15;</code>
       */
      public Builder setSettlement(long value) {

        settlement_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 结算价
       * </pre>
       *
       * <code>int64 settlement = 15;</code>
       */
      public Builder clearSettlement() {

        settlement_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 持仓量
       * </pre>
       *
       * <code>int64 amount = 16;</code>
       */
      public long getAmount() {
        return amount_;
      }

      /**
       * <pre>
       * 持仓量
       * </pre>
       *
       * <code>int64 amount = 16;</code>
       */
      public Builder setAmount(long value) {

        amount_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 持仓量
       * </pre>
       *
       * <code>int64 amount = 16;</code>
       */
      public Builder clearAmount() {

        amount_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 持仓量涨跌
       * </pre>
       *
       * <code>int64 amountChange = 17;</code>
       */
      public long getAmountChange() {
        return amountChange_;
      }

      /**
       * <pre>
       * 持仓量涨跌
       * </pre>
       *
       * <code>int64 amountChange = 17;</code>
       */
      public Builder setAmountChange(long value) {

        amountChange_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 持仓量涨跌
       * </pre>
       *
       * <code>int64 amountChange = 17;</code>
       */
      public Builder clearAmountChange() {

        amountChange_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 成交量(总手)
       * </pre>
       *
       * <code>int64 businessAmount = 18;</code>
       */
      public long getBusinessAmount() {
        return businessAmount_;
      }

      /**
       * <pre>
       * 成交量(总手)
       * </pre>
       *
       * <code>int64 businessAmount = 18;</code>
       */
      public Builder setBusinessAmount(long value) {

        businessAmount_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 成交量(总手)
       * </pre>
       *
       * <code>int64 businessAmount = 18;</code>
       */
      public Builder clearBusinessAmount() {

        businessAmount_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 成交涨跌
       * </pre>
       *
       * <code>int64 businessAmountChange = 19;</code>
       */
      public long getBusinessAmountChange() {
        return businessAmountChange_;
      }

      /**
       * <pre>
       * 成交涨跌
       * </pre>
       *
       * <code>int64 businessAmountChange = 19;</code>
       */
      public Builder setBusinessAmountChange(long value) {

        businessAmountChange_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 成交涨跌
       * </pre>
       *
       * <code>int64 businessAmountChange = 19;</code>
       */
      public Builder clearBusinessAmountChange() {

        businessAmountChange_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 成交额
       * </pre>
       *
       * <code>int64 businessBalance = 20;</code>
       */
      public long getBusinessBalance() {
        return businessBalance_;
      }

      /**
       * <pre>
       * 成交额
       * </pre>
       *
       * <code>int64 businessBalance = 20;</code>
       */
      public Builder setBusinessBalance(long value) {

        businessBalance_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 成交额
       * </pre>
       *
       * <code>int64 businessBalance = 20;</code>
       */
      public Builder clearBusinessBalance() {

        businessBalance_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 换手率
       * </pre>
       *
       * <code>int64 turnoverRatio = 21;</code>
       */
      public long getTurnoverRatio() {
        return turnoverRatio_;
      }

      /**
       * <pre>
       * 换手率
       * </pre>
       *
       * <code>int64 turnoverRatio = 21;</code>
       */
      public Builder setTurnoverRatio(long value) {

        turnoverRatio_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 换手率
       * </pre>
       *
       * <code>int64 turnoverRatio = 21;</code>
       */
      public Builder clearTurnoverRatio() {

        turnoverRatio_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * barTime
       * </pre>
       *
       * <code>int64 barTime = 22;</code>
       */
      public long getBarTime() {
        return barTime_;
      }

      /**
       * <pre>
       * barTime
       * </pre>
       *
       * <code>int64 barTime = 22;</code>
       */
      public Builder setBarTime(long value) {

        barTime_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * barTime
       * </pre>
       *
       * <code>int64 barTime = 22;</code>
       */
      public Builder clearBarTime() {

        barTime_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * barTime
       * </pre>
       *
       * <code>string market = 23;</code>
       */
      public String getMarket() {
        Object ref = market_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          market_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }

      /**
       * <pre>
       * barTime
       * </pre>
       *
       * <code>string market = 23;</code>
       */
      public Builder setMarket(
          String value) {
        if (value == null) {
          throw new NullPointerException();
        }

        market_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * barTime
       * </pre>
       *
       * <code>string market = 23;</code>
       */
      public com.google.protobuf.ByteString
      getMarketBytes() {
        Object ref = market_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          market_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      /**
       * <pre>
       * barTime
       * </pre>
       *
       * <code>string market = 23;</code>
       */
      public Builder setMarketBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        checkByteStringIsUtf8(value);

        market_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * barTime
       * </pre>
       *
       * <code>string market = 23;</code>
       */
      public Builder clearMarket() {

        market_ = getDefaultInstance().getMarket();
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 截止当前bar结束的成交量，计算成交量用
       * </pre>
       *
       * <code>int64 sumToEndBusinessAmount = 24;</code>
       */
      public long getSumToEndBusinessAmount() {
        return sumToEndBusinessAmount_;
      }

      /**
       * <pre>
       * 截止当前bar结束的成交量，计算成交量用
       * </pre>
       *
       * <code>int64 sumToEndBusinessAmount = 24;</code>
       */
      public Builder setSumToEndBusinessAmount(long value) {

        sumToEndBusinessAmount_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 截止当前bar结束的成交量，计算成交量用
       * </pre>
       *
       * <code>int64 sumToEndBusinessAmount = 24;</code>
       */
      public Builder clearSumToEndBusinessAmount() {

        sumToEndBusinessAmount_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 截止当前bar结束的成交额，计算成交额用
       * </pre>
       *
       * <code>int64 sumToEndBusinessBalance = 25;</code>
       */
      public long getSumToEndBusinessBalance() {
        return sumToEndBusinessBalance_;
      }

      /**
       * <pre>
       * 截止当前bar结束的成交额，计算成交额用
       * </pre>
       *
       * <code>int64 sumToEndBusinessBalance = 25;</code>
       */
      public Builder setSumToEndBusinessBalance(long value) {

        sumToEndBusinessBalance_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 截止当前bar结束的成交额，计算成交额用
       * </pre>
       *
       * <code>int64 sumToEndBusinessBalance = 25;</code>
       */
      public Builder clearSumToEndBusinessBalance() {

        sumToEndBusinessBalance_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 上根bar的close;
       * </pre>
       *
       * <code>int64 lastClose = 26;</code>
       */
      public long getLastClose() {
        return lastClose_;
      }

      /**
       * <pre>
       * 上根bar的close;
       * </pre>
       *
       * <code>int64 lastClose = 26;</code>
       */
      public Builder setLastClose(long value) {

        lastClose_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 上根bar的close;
       * </pre>
       *
       * <code>int64 lastClose = 26;</code>
       */
      public Builder clearLastClose() {

        lastClose_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 年k periodTime=yyyy  月k periodTime=yyyyMM 周K periodTime=yyyyMMww
       * </pre>
       *
       * <code>int64 periodTime = 27;</code>
       */
      public long getPeriodTime() {
        return periodTime_;
      }

      /**
       * <pre>
       * 年k periodTime=yyyy  月k periodTime=yyyyMM 周K periodTime=yyyyMMww
       * </pre>
       *
       * <code>int64 periodTime = 27;</code>
       */
      public Builder setPeriodTime(long value) {

        periodTime_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 年k periodTime=yyyy  月k periodTime=yyyyMM 周K periodTime=yyyyMMww
       * </pre>
       *
       * <code>int64 periodTime = 27;</code>
       */
      public Builder clearPeriodTime() {

        periodTime_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 最新bar的修改时间.
       * </pre>
       *
       * <code>int64 updateTime = 28;</code>
       */
      public long getUpdateTime() {
        return updateTime_;
      }

      /**
       * <pre>
       * 最新bar的修改时间.
       * </pre>
       *
       * <code>int64 updateTime = 28;</code>
       */
      public Builder setUpdateTime(long value) {

        updateTime_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 最新bar的修改时间.
       * </pre>
       *
       * <code>int64 updateTime = 28;</code>
       */
      public Builder clearUpdateTime() {

        updateTime_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 2017-11-2 add property
       * </pre>
       *
       * <code>float rangePCT = 29;</code>
       */
      public float getRangePCT() {
        return rangePCT_;
      }

      /**
       * <pre>
       * 2017-11-2 add property
       * </pre>
       *
       * <code>float rangePCT = 29;</code>
       */
      public Builder setRangePCT(float value) {

        rangePCT_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 2017-11-2 add property
       * </pre>
       *
       * <code>float rangePCT = 29;</code>
       */
      public Builder clearRangePCT() {

        rangePCT_ = 0F;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 区间绝对振幅
       * </pre>
       *
       * <code>float rangeOfPrice = 30;</code>
       */
      public float getRangeOfPrice() {
        return rangeOfPrice_;
      }

      /**
       * <pre>
       * 区间绝对振幅
       * </pre>
       *
       * <code>float rangeOfPrice = 30;</code>
       */
      public Builder setRangeOfPrice(float value) {

        rangeOfPrice_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 区间绝对振幅
       * </pre>
       *
       * <code>float rangeOfPrice = 30;</code>
       */
      public Builder clearRangeOfPrice() {

        rangeOfPrice_ = 0F;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 至今最高价
       * </pre>
       *
       * <code>int64 accuHighPrice = 31;</code>
       */
      public long getAccuHighPrice() {
        return accuHighPrice_;
      }

      /**
       * <pre>
       * 至今最高价
       * </pre>
       *
       * <code>int64 accuHighPrice = 31;</code>
       */
      public Builder setAccuHighPrice(long value) {

        accuHighPrice_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 至今最高价
       * </pre>
       *
       * <code>int64 accuHighPrice = 31;</code>
       */
      public Builder clearAccuHighPrice() {

        accuHighPrice_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 至今最低价
       * </pre>
       *
       * <code>int64 accuLowPrice = 32;</code>
       */
      public long getAccuLowPrice() {
        return accuLowPrice_;
      }

      /**
       * <pre>
       * 至今最低价
       * </pre>
       *
       * <code>int64 accuLowPrice = 32;</code>
       */
      public Builder setAccuLowPrice(long value) {

        accuLowPrice_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 至今最低价
       * </pre>
       *
       * <code>int64 accuLowPrice = 32;</code>
       */
      public Builder clearAccuLowPrice() {

        accuLowPrice_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 至今成交量
       * </pre>
       *
       * <code>int64 accuBargainAmount = 33;</code>
       */
      public long getAccuBargainAmount() {
        return accuBargainAmount_;
      }

      /**
       * <pre>
       * 至今成交量
       * </pre>
       *
       * <code>int64 accuBargainAmount = 33;</code>
       */
      public Builder setAccuBargainAmount(long value) {

        accuBargainAmount_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 至今成交量
       * </pre>
       *
       * <code>int64 accuBargainAmount = 33;</code>
       */
      public Builder clearAccuBargainAmount() {

        accuBargainAmount_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 至今成交额
       * </pre>
       *
       * <code>int64 accuBargainSum = 34;</code>
       */
      public long getAccuBargainSum() {
        return accuBargainSum_;
      }

      /**
       * <pre>
       * 至今成交额
       * </pre>
       *
       * <code>int64 accuBargainSum = 34;</code>
       */
      public Builder setAccuBargainSum(long value) {

        accuBargainSum_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 至今成交额
       * </pre>
       *
       * <code>int64 accuBargainSum = 34;</code>
       */
      public Builder clearAccuBargainSum() {

        accuBargainSum_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 价格变化
       * </pre>
       *
       * <code>int64 changeOI = 35;</code>
       */
      public long getChangeOI() {
        return changeOI_;
      }

      /**
       * <pre>
       * 价格变化
       * </pre>
       *
       * <code>int64 changeOI = 35;</code>
       */
      public Builder setChangeOI(long value) {

        changeOI_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 价格变化
       * </pre>
       *
       * <code>int64 changeOI = 35;</code>
       */
      public Builder clearChangeOI() {

        changeOI_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 区间均价
       * </pre>
       *
       * <code>int64 avg = 36;</code>
       */
      public long getAvg() {
        return avg_;
      }

      /**
       * <pre>
       * 区间均价
       * </pre>
       *
       * <code>int64 avg = 36;</code>
       */
      public Builder setAvg(long value) {

        avg_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 区间均价
       * </pre>
       *
       * <code>int64 avg = 36;</code>
       */
      public Builder clearAvg() {

        avg_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 交易周期数
       * </pre>
       *
       * <code>int32 tradePeriodNums = 37;</code>
       */
      public int getTradePeriodNums() {
        return tradePeriodNums_;
      }

      /**
       * <pre>
       * 交易周期数
       * </pre>
       *
       * <code>int32 tradePeriodNums = 37;</code>
       */
      public Builder setTradePeriodNums(int value) {

        tradePeriodNums_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 交易周期数
       * </pre>
       *
       * <code>int32 tradePeriodNums = 37;</code>
       */
      public Builder clearTradePeriodNums() {

        tradePeriodNums_ = 0;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 交易日
       * </pre>
       *
       * <code>int32 tradingDate = 38;</code>
       */
      public int getTradingDate() {
        return tradingDate_;
      }

      /**
       * <pre>
       * 交易日
       * </pre>
       *
       * <code>int32 tradingDate = 38;</code>
       */
      public Builder setTradingDate(int value) {

        tradingDate_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * 交易日
       * </pre>
       *
       * <code>int32 tradingDate = 38;</code>
       */
      public Builder clearTradingDate() {

        tradingDate_ = 0;
        onChanged();
        return this;
      }

      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:KLineCache)
    }

  }

  // @@protoc_insertion_point(outer_class_scope)
}
